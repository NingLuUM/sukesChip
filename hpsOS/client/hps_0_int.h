#ifndef _ALTERA_HPS_0_INT_H_
#define _ALTERA_HPS_0_INT_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file './soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'adc_ramBank0', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'ADC_RAMBANK0_'.
 * The prefix is the slave descriptor.
 */
#define ADC_RAMBANK0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define ADC_RAMBANK0_COMPONENT_NAME adc_ramBank0
#define ADC_RAMBANK0_BASE 0x0
#define ADC_RAMBANK0_SPAN 32768
#define ADC_RAMBANK0_END 0x7fff
#define ADC_RAMBANK0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define ADC_RAMBANK0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define ADC_RAMBANK0_CONTENTS_INFO ""
#define ADC_RAMBANK0_DUAL_PORT 1
#define ADC_RAMBANK0_GUI_RAM_BLOCK_TYPE AUTO
#define ADC_RAMBANK0_INIT_CONTENTS_FILE soc_system_adc_ramBank0
#define ADC_RAMBANK0_INIT_MEM_CONTENT 1
#define ADC_RAMBANK0_INSTANCE_ID NONE
#define ADC_RAMBANK0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define ADC_RAMBANK0_RAM_BLOCK_TYPE AUTO
#define ADC_RAMBANK0_READ_DURING_WRITE_MODE DONT_CARE
#define ADC_RAMBANK0_SINGLE_CLOCK_OP 0
#define ADC_RAMBANK0_SIZE_MULTIPLE 1
#define ADC_RAMBANK0_SIZE_VALUE 32768
#define ADC_RAMBANK0_WRITABLE 1
#define ADC_RAMBANK0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define ADC_RAMBANK0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define ADC_RAMBANK0_MEMORY_INFO_GENERATE_HEX 1
#define ADC_RAMBANK0_MEMORY_INFO_HAS_BYTE_LANE 0
#define ADC_RAMBANK0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define ADC_RAMBANK0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define ADC_RAMBANK0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_adc_ramBank0

/*
 * Macros for device 'pio_lvds_serial_command_addr', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_LVDS_SERIAL_COMMAND_ADDR_'.
 * The prefix is the slave descriptor.
 */
#define PIO_LVDS_SERIAL_COMMAND_ADDR_COMPONENT_TYPE altera_avalon_pio
#define PIO_LVDS_SERIAL_COMMAND_ADDR_COMPONENT_NAME pio_lvds_serial_command_addr
#define PIO_LVDS_SERIAL_COMMAND_ADDR_BASE 0x0
#define PIO_LVDS_SERIAL_COMMAND_ADDR_SPAN 16
#define PIO_LVDS_SERIAL_COMMAND_ADDR_END 0xf
#define PIO_LVDS_SERIAL_COMMAND_ADDR_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_LVDS_SERIAL_COMMAND_ADDR_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_LVDS_SERIAL_COMMAND_ADDR_CAPTURE 0
#define PIO_LVDS_SERIAL_COMMAND_ADDR_DATA_WIDTH 8
#define PIO_LVDS_SERIAL_COMMAND_ADDR_DO_TEST_BENCH_WIRING 0
#define PIO_LVDS_SERIAL_COMMAND_ADDR_DRIVEN_SIM_VALUE 0
#define PIO_LVDS_SERIAL_COMMAND_ADDR_EDGE_TYPE NONE
#define PIO_LVDS_SERIAL_COMMAND_ADDR_FREQ 50000000
#define PIO_LVDS_SERIAL_COMMAND_ADDR_HAS_IN 0
#define PIO_LVDS_SERIAL_COMMAND_ADDR_HAS_OUT 1
#define PIO_LVDS_SERIAL_COMMAND_ADDR_HAS_TRI 0
#define PIO_LVDS_SERIAL_COMMAND_ADDR_IRQ_TYPE NONE
#define PIO_LVDS_SERIAL_COMMAND_ADDR_RESET_VALUE 0

/*
 * Macros for device 'pio_lvds_serial_command', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_LVDS_SERIAL_COMMAND_'.
 * The prefix is the slave descriptor.
 */
#define PIO_LVDS_SERIAL_COMMAND_COMPONENT_TYPE altera_avalon_pio
#define PIO_LVDS_SERIAL_COMMAND_COMPONENT_NAME pio_lvds_serial_command
#define PIO_LVDS_SERIAL_COMMAND_BASE 0x10
#define PIO_LVDS_SERIAL_COMMAND_SPAN 16
#define PIO_LVDS_SERIAL_COMMAND_END 0x1f
#define PIO_LVDS_SERIAL_COMMAND_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_LVDS_SERIAL_COMMAND_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_LVDS_SERIAL_COMMAND_CAPTURE 0
#define PIO_LVDS_SERIAL_COMMAND_DATA_WIDTH 16
#define PIO_LVDS_SERIAL_COMMAND_DO_TEST_BENCH_WIRING 0
#define PIO_LVDS_SERIAL_COMMAND_DRIVEN_SIM_VALUE 0
#define PIO_LVDS_SERIAL_COMMAND_EDGE_TYPE NONE
#define PIO_LVDS_SERIAL_COMMAND_FREQ 50000000
#define PIO_LVDS_SERIAL_COMMAND_HAS_IN 0
#define PIO_LVDS_SERIAL_COMMAND_HAS_OUT 1
#define PIO_LVDS_SERIAL_COMMAND_HAS_TRI 0
#define PIO_LVDS_SERIAL_COMMAND_IRQ_TYPE NONE
#define PIO_LVDS_SERIAL_COMMAND_RESET_VALUE 0

/*
 * Macros for device 'pio_lvds_control_comms', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_LVDS_CONTROL_COMMS_'.
 * The prefix is the slave descriptor.
 */
#define PIO_LVDS_CONTROL_COMMS_COMPONENT_TYPE altera_avalon_pio
#define PIO_LVDS_CONTROL_COMMS_COMPONENT_NAME pio_lvds_control_comms
#define PIO_LVDS_CONTROL_COMMS_BASE 0x20
#define PIO_LVDS_CONTROL_COMMS_SPAN 16
#define PIO_LVDS_CONTROL_COMMS_END 0x2f
#define PIO_LVDS_CONTROL_COMMS_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_LVDS_CONTROL_COMMS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_LVDS_CONTROL_COMMS_CAPTURE 0
#define PIO_LVDS_CONTROL_COMMS_DATA_WIDTH 8
#define PIO_LVDS_CONTROL_COMMS_DO_TEST_BENCH_WIRING 0
#define PIO_LVDS_CONTROL_COMMS_DRIVEN_SIM_VALUE 0
#define PIO_LVDS_CONTROL_COMMS_EDGE_TYPE NONE
#define PIO_LVDS_CONTROL_COMMS_FREQ 50000000
#define PIO_LVDS_CONTROL_COMMS_HAS_IN 0
#define PIO_LVDS_CONTROL_COMMS_HAS_OUT 1
#define PIO_LVDS_CONTROL_COMMS_HAS_TRI 0
#define PIO_LVDS_CONTROL_COMMS_IRQ_TYPE NONE
#define PIO_LVDS_CONTROL_COMMS_RESET_VALUE 0

/*
 * Macros for device 'pio_get_adc_fpga_state', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_GET_ADC_FPGA_STATE_'.
 * The prefix is the slave descriptor.
 */
#define PIO_GET_ADC_FPGA_STATE_COMPONENT_TYPE altera_avalon_pio
#define PIO_GET_ADC_FPGA_STATE_COMPONENT_NAME pio_get_adc_fpga_state
#define PIO_GET_ADC_FPGA_STATE_BASE 0x30
#define PIO_GET_ADC_FPGA_STATE_SPAN 16
#define PIO_GET_ADC_FPGA_STATE_END 0x3f
#define PIO_GET_ADC_FPGA_STATE_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_GET_ADC_FPGA_STATE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_GET_ADC_FPGA_STATE_CAPTURE 0
#define PIO_GET_ADC_FPGA_STATE_DATA_WIDTH 2
#define PIO_GET_ADC_FPGA_STATE_DO_TEST_BENCH_WIRING 0
#define PIO_GET_ADC_FPGA_STATE_DRIVEN_SIM_VALUE 0
#define PIO_GET_ADC_FPGA_STATE_EDGE_TYPE NONE
#define PIO_GET_ADC_FPGA_STATE_FREQ 50000000
#define PIO_GET_ADC_FPGA_STATE_HAS_IN 1
#define PIO_GET_ADC_FPGA_STATE_HAS_OUT 0
#define PIO_GET_ADC_FPGA_STATE_HAS_TRI 0
#define PIO_GET_ADC_FPGA_STATE_IRQ_TYPE NONE
#define PIO_GET_ADC_FPGA_STATE_RESET_VALUE 0

/*
 * Macros for device 'pio_adc_fpga_state_reset', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_ADC_FPGA_STATE_RESET_'.
 * The prefix is the slave descriptor.
 */
#define PIO_ADC_FPGA_STATE_RESET_COMPONENT_TYPE altera_avalon_pio
#define PIO_ADC_FPGA_STATE_RESET_COMPONENT_NAME pio_adc_fpga_state_reset
#define PIO_ADC_FPGA_STATE_RESET_BASE 0x40
#define PIO_ADC_FPGA_STATE_RESET_SPAN 16
#define PIO_ADC_FPGA_STATE_RESET_END 0x4f
#define PIO_ADC_FPGA_STATE_RESET_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_ADC_FPGA_STATE_RESET_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_ADC_FPGA_STATE_RESET_CAPTURE 0
#define PIO_ADC_FPGA_STATE_RESET_DATA_WIDTH 1
#define PIO_ADC_FPGA_STATE_RESET_DO_TEST_BENCH_WIRING 0
#define PIO_ADC_FPGA_STATE_RESET_DRIVEN_SIM_VALUE 0
#define PIO_ADC_FPGA_STATE_RESET_EDGE_TYPE NONE
#define PIO_ADC_FPGA_STATE_RESET_FREQ 50000000
#define PIO_ADC_FPGA_STATE_RESET_HAS_IN 0
#define PIO_ADC_FPGA_STATE_RESET_HAS_OUT 1
#define PIO_ADC_FPGA_STATE_RESET_HAS_TRI 0
#define PIO_ADC_FPGA_STATE_RESET_IRQ_TYPE NONE
#define PIO_ADC_FPGA_STATE_RESET_RESET_VALUE 0

/*
 * Macros for device 'pio_set_adc_record_length', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_SET_ADC_RECORD_LENGTH_'.
 * The prefix is the slave descriptor.
 */
#define PIO_SET_ADC_RECORD_LENGTH_COMPONENT_TYPE altera_avalon_pio
#define PIO_SET_ADC_RECORD_LENGTH_COMPONENT_NAME pio_set_adc_record_length
#define PIO_SET_ADC_RECORD_LENGTH_BASE 0x50
#define PIO_SET_ADC_RECORD_LENGTH_SPAN 16
#define PIO_SET_ADC_RECORD_LENGTH_END 0x5f
#define PIO_SET_ADC_RECORD_LENGTH_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_SET_ADC_RECORD_LENGTH_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_SET_ADC_RECORD_LENGTH_CAPTURE 0
#define PIO_SET_ADC_RECORD_LENGTH_DATA_WIDTH 13
#define PIO_SET_ADC_RECORD_LENGTH_DO_TEST_BENCH_WIRING 0
#define PIO_SET_ADC_RECORD_LENGTH_DRIVEN_SIM_VALUE 0
#define PIO_SET_ADC_RECORD_LENGTH_EDGE_TYPE NONE
#define PIO_SET_ADC_RECORD_LENGTH_FREQ 50000000
#define PIO_SET_ADC_RECORD_LENGTH_HAS_IN 0
#define PIO_SET_ADC_RECORD_LENGTH_HAS_OUT 1
#define PIO_SET_ADC_RECORD_LENGTH_HAS_TRI 0
#define PIO_SET_ADC_RECORD_LENGTH_IRQ_TYPE NONE
#define PIO_SET_ADC_RECORD_LENGTH_RESET_VALUE 0

/*
 * Macros for device 'pio_set_adc_trig_delay', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_SET_ADC_TRIG_DELAY_'.
 * The prefix is the slave descriptor.
 */
#define PIO_SET_ADC_TRIG_DELAY_COMPONENT_TYPE altera_avalon_pio
#define PIO_SET_ADC_TRIG_DELAY_COMPONENT_NAME pio_set_adc_trig_delay
#define PIO_SET_ADC_TRIG_DELAY_BASE 0x60
#define PIO_SET_ADC_TRIG_DELAY_SPAN 16
#define PIO_SET_ADC_TRIG_DELAY_END 0x6f
#define PIO_SET_ADC_TRIG_DELAY_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_SET_ADC_TRIG_DELAY_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_SET_ADC_TRIG_DELAY_CAPTURE 0
#define PIO_SET_ADC_TRIG_DELAY_DATA_WIDTH 32
#define PIO_SET_ADC_TRIG_DELAY_DO_TEST_BENCH_WIRING 0
#define PIO_SET_ADC_TRIG_DELAY_DRIVEN_SIM_VALUE 0
#define PIO_SET_ADC_TRIG_DELAY_EDGE_TYPE NONE
#define PIO_SET_ADC_TRIG_DELAY_FREQ 50000000
#define PIO_SET_ADC_TRIG_DELAY_HAS_IN 0
#define PIO_SET_ADC_TRIG_DELAY_HAS_OUT 1
#define PIO_SET_ADC_TRIG_DELAY_HAS_TRI 0
#define PIO_SET_ADC_TRIG_DELAY_IRQ_TYPE NONE
#define PIO_SET_ADC_TRIG_DELAY_RESET_VALUE 0

/*
 * Macros for device 'pio_adc_transmit_ready', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_ADC_TRANSMIT_READY_'.
 * The prefix is the slave descriptor.
 */
#define PIO_ADC_TRANSMIT_READY_COMPONENT_TYPE altera_avalon_pio
#define PIO_ADC_TRANSMIT_READY_COMPONENT_NAME pio_adc_transmit_ready
#define PIO_ADC_TRANSMIT_READY_BASE 0x70
#define PIO_ADC_TRANSMIT_READY_SPAN 16
#define PIO_ADC_TRANSMIT_READY_END 0x7f
#define PIO_ADC_TRANSMIT_READY_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_ADC_TRANSMIT_READY_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_ADC_TRANSMIT_READY_CAPTURE 0
#define PIO_ADC_TRANSMIT_READY_DATA_WIDTH 1
#define PIO_ADC_TRANSMIT_READY_DO_TEST_BENCH_WIRING 0
#define PIO_ADC_TRANSMIT_READY_DRIVEN_SIM_VALUE 0
#define PIO_ADC_TRANSMIT_READY_EDGE_TYPE NONE
#define PIO_ADC_TRANSMIT_READY_FREQ 50000000
#define PIO_ADC_TRANSMIT_READY_HAS_IN 1
#define PIO_ADC_TRANSMIT_READY_HAS_OUT 0
#define PIO_ADC_TRANSMIT_READY_HAS_TRI 0
#define PIO_ADC_TRANSMIT_READY_IRQ_TYPE NONE
#define PIO_ADC_TRANSMIT_READY_RESET_VALUE 0

/*
 * Macros for device 'pio_interrupt_generator', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_INTERRUPT_GENERATOR_'.
 * The prefix is the slave descriptor.
 */
#define PIO_INTERRUPT_GENERATOR_COMPONENT_TYPE altera_avalon_pio
#define PIO_INTERRUPT_GENERATOR_COMPONENT_NAME pio_interrupt_generator
#define PIO_INTERRUPT_GENERATOR_BASE 0x80
#define PIO_INTERRUPT_GENERATOR_SPAN 16
#define PIO_INTERRUPT_GENERATOR_END 0x8f
#define PIO_INTERRUPT_GENERATOR_IRQ 0
#define PIO_INTERRUPT_GENERATOR_BIT_CLEARING_EDGE_REGISTER 1
#define PIO_INTERRUPT_GENERATOR_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_INTERRUPT_GENERATOR_CAPTURE 1
#define PIO_INTERRUPT_GENERATOR_DATA_WIDTH 8
#define PIO_INTERRUPT_GENERATOR_DO_TEST_BENCH_WIRING 0
#define PIO_INTERRUPT_GENERATOR_DRIVEN_SIM_VALUE 0
#define PIO_INTERRUPT_GENERATOR_EDGE_TYPE RISING
#define PIO_INTERRUPT_GENERATOR_FREQ 50000000
#define PIO_INTERRUPT_GENERATOR_HAS_IN 1
#define PIO_INTERRUPT_GENERATOR_HAS_OUT 0
#define PIO_INTERRUPT_GENERATOR_HAS_TRI 0
#define PIO_INTERRUPT_GENERATOR_IRQ_TYPE EDGE
#define PIO_INTERRUPT_GENERATOR_RESET_VALUE 0

/*
 * Macros for device 'pio_txControlComms', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_TXCONTROLCOMMS_'.
 * The prefix is the slave descriptor.
 */
#define PIO_TXCONTROLCOMMS_COMPONENT_TYPE altera_avalon_pio
#define PIO_TXCONTROLCOMMS_COMPONENT_NAME pio_txControlComms
#define PIO_TXCONTROLCOMMS_BASE 0x100
#define PIO_TXCONTROLCOMMS_SPAN 16
#define PIO_TXCONTROLCOMMS_END 0x10f
#define PIO_TXCONTROLCOMMS_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_TXCONTROLCOMMS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_TXCONTROLCOMMS_CAPTURE 0
#define PIO_TXCONTROLCOMMS_DATA_WIDTH 8
#define PIO_TXCONTROLCOMMS_DO_TEST_BENCH_WIRING 0
#define PIO_TXCONTROLCOMMS_DRIVEN_SIM_VALUE 0
#define PIO_TXCONTROLCOMMS_EDGE_TYPE NONE
#define PIO_TXCONTROLCOMMS_FREQ 50000000
#define PIO_TXCONTROLCOMMS_HAS_IN 0
#define PIO_TXCONTROLCOMMS_HAS_OUT 1
#define PIO_TXCONTROLCOMMS_HAS_TRI 0
#define PIO_TXCONTROLCOMMS_IRQ_TYPE NONE
#define PIO_TXCONTROLCOMMS_RESET_VALUE 0

/*
 * Macros for device 'pio_set_txChannelMask', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_SET_TXCHANNELMASK_'.
 * The prefix is the slave descriptor.
 */
#define PIO_SET_TXCHANNELMASK_COMPONENT_TYPE altera_avalon_pio
#define PIO_SET_TXCHANNELMASK_COMPONENT_NAME pio_set_txChannelMask
#define PIO_SET_TXCHANNELMASK_BASE 0x120
#define PIO_SET_TXCHANNELMASK_SPAN 16
#define PIO_SET_TXCHANNELMASK_END 0x12f
#define PIO_SET_TXCHANNELMASK_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_SET_TXCHANNELMASK_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_SET_TXCHANNELMASK_CAPTURE 0
#define PIO_SET_TXCHANNELMASK_DATA_WIDTH 8
#define PIO_SET_TXCHANNELMASK_DO_TEST_BENCH_WIRING 0
#define PIO_SET_TXCHANNELMASK_DRIVEN_SIM_VALUE 0
#define PIO_SET_TXCHANNELMASK_EDGE_TYPE NONE
#define PIO_SET_TXCHANNELMASK_FREQ 50000000
#define PIO_SET_TXCHANNELMASK_HAS_IN 0
#define PIO_SET_TXCHANNELMASK_HAS_OUT 1
#define PIO_SET_TXCHANNELMASK_HAS_TRI 0
#define PIO_SET_TXCHANNELMASK_IRQ_TYPE NONE
#define PIO_SET_TXCHANNELMASK_RESET_VALUE 0

/*
 * Macros for device 'pio_disableTransducerSafetyProtocols', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_DISABLETRANSDUCERSAFETYPROTOCOLS_'.
 * The prefix is the slave descriptor.
 */
#define PIO_DISABLETRANSDUCERSAFETYPROTOCOLS_COMPONENT_TYPE altera_avalon_pio
#define PIO_DISABLETRANSDUCERSAFETYPROTOCOLS_COMPONENT_NAME pio_disableTransducerSafetyProtocols
#define PIO_DISABLETRANSDUCERSAFETYPROTOCOLS_BASE 0x130
#define PIO_DISABLETRANSDUCERSAFETYPROTOCOLS_SPAN 16
#define PIO_DISABLETRANSDUCERSAFETYPROTOCOLS_END 0x13f
#define PIO_DISABLETRANSDUCERSAFETYPROTOCOLS_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_DISABLETRANSDUCERSAFETYPROTOCOLS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_DISABLETRANSDUCERSAFETYPROTOCOLS_CAPTURE 0
#define PIO_DISABLETRANSDUCERSAFETYPROTOCOLS_DATA_WIDTH 8
#define PIO_DISABLETRANSDUCERSAFETYPROTOCOLS_DO_TEST_BENCH_WIRING 0
#define PIO_DISABLETRANSDUCERSAFETYPROTOCOLS_DRIVEN_SIM_VALUE 0
#define PIO_DISABLETRANSDUCERSAFETYPROTOCOLS_EDGE_TYPE NONE
#define PIO_DISABLETRANSDUCERSAFETYPROTOCOLS_FREQ 50000000
#define PIO_DISABLETRANSDUCERSAFETYPROTOCOLS_HAS_IN 0
#define PIO_DISABLETRANSDUCERSAFETYPROTOCOLS_HAS_OUT 1
#define PIO_DISABLETRANSDUCERSAFETYPROTOCOLS_HAS_TRI 0
#define PIO_DISABLETRANSDUCERSAFETYPROTOCOLS_IRQ_TYPE NONE
#define PIO_DISABLETRANSDUCERSAFETYPROTOCOLS_RESET_VALUE 0

/*
 * Macros for device 'pio_led', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_LED_'.
 * The prefix is the slave descriptor.
 */
#define PIO_LED_COMPONENT_TYPE altera_avalon_pio
#define PIO_LED_COMPONENT_NAME pio_led
#define PIO_LED_BASE 0x200
#define PIO_LED_SPAN 16
#define PIO_LED_END 0x20f
#define PIO_LED_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_LED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_LED_CAPTURE 0
#define PIO_LED_DATA_WIDTH 8
#define PIO_LED_DO_TEST_BENCH_WIRING 0
#define PIO_LED_DRIVEN_SIM_VALUE 0
#define PIO_LED_EDGE_TYPE NONE
#define PIO_LED_FREQ 50000000
#define PIO_LED_HAS_IN 0
#define PIO_LED_HAS_OUT 1
#define PIO_LED_HAS_TRI 0
#define PIO_LED_IRQ_TYPE NONE
#define PIO_LED_RESET_VALUE 255

/*
 * Macros for device 'adc_ramBank1', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'ADC_RAMBANK1_'.
 * The prefix is the slave descriptor.
 */
#define ADC_RAMBANK1_COMPONENT_TYPE altera_avalon_onchip_memory2
#define ADC_RAMBANK1_COMPONENT_NAME adc_ramBank1
#define ADC_RAMBANK1_BASE 0x8000
#define ADC_RAMBANK1_SPAN 32768
#define ADC_RAMBANK1_END 0xffff
#define ADC_RAMBANK1_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define ADC_RAMBANK1_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define ADC_RAMBANK1_CONTENTS_INFO ""
#define ADC_RAMBANK1_DUAL_PORT 1
#define ADC_RAMBANK1_GUI_RAM_BLOCK_TYPE AUTO
#define ADC_RAMBANK1_INIT_CONTENTS_FILE soc_system_adc_ramBank1
#define ADC_RAMBANK1_INIT_MEM_CONTENT 1
#define ADC_RAMBANK1_INSTANCE_ID NONE
#define ADC_RAMBANK1_NON_DEFAULT_INIT_FILE_ENABLED 0
#define ADC_RAMBANK1_RAM_BLOCK_TYPE AUTO
#define ADC_RAMBANK1_READ_DURING_WRITE_MODE DONT_CARE
#define ADC_RAMBANK1_SINGLE_CLOCK_OP 0
#define ADC_RAMBANK1_SIZE_MULTIPLE 1
#define ADC_RAMBANK1_SIZE_VALUE 32768
#define ADC_RAMBANK1_WRITABLE 1
#define ADC_RAMBANK1_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define ADC_RAMBANK1_MEMORY_INFO_GENERATE_DAT_SYM 1
#define ADC_RAMBANK1_MEMORY_INFO_GENERATE_HEX 1
#define ADC_RAMBANK1_MEMORY_INFO_HAS_BYTE_LANE 0
#define ADC_RAMBANK1_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define ADC_RAMBANK1_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define ADC_RAMBANK1_MEMORY_INFO_MEM_INIT_FILENAME soc_system_adc_ramBank1

/*
 * Macros for device 'adc_ramBank2', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'ADC_RAMBANK2_'.
 * The prefix is the slave descriptor.
 */
#define ADC_RAMBANK2_COMPONENT_TYPE altera_avalon_onchip_memory2
#define ADC_RAMBANK2_COMPONENT_NAME adc_ramBank2
#define ADC_RAMBANK2_BASE 0x10000
#define ADC_RAMBANK2_SPAN 32768
#define ADC_RAMBANK2_END 0x17fff
#define ADC_RAMBANK2_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define ADC_RAMBANK2_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define ADC_RAMBANK2_CONTENTS_INFO ""
#define ADC_RAMBANK2_DUAL_PORT 1
#define ADC_RAMBANK2_GUI_RAM_BLOCK_TYPE AUTO
#define ADC_RAMBANK2_INIT_CONTENTS_FILE soc_system_adc_ramBank2
#define ADC_RAMBANK2_INIT_MEM_CONTENT 1
#define ADC_RAMBANK2_INSTANCE_ID NONE
#define ADC_RAMBANK2_NON_DEFAULT_INIT_FILE_ENABLED 0
#define ADC_RAMBANK2_RAM_BLOCK_TYPE AUTO
#define ADC_RAMBANK2_READ_DURING_WRITE_MODE DONT_CARE
#define ADC_RAMBANK2_SINGLE_CLOCK_OP 0
#define ADC_RAMBANK2_SIZE_MULTIPLE 1
#define ADC_RAMBANK2_SIZE_VALUE 32768
#define ADC_RAMBANK2_WRITABLE 1
#define ADC_RAMBANK2_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define ADC_RAMBANK2_MEMORY_INFO_GENERATE_DAT_SYM 1
#define ADC_RAMBANK2_MEMORY_INFO_GENERATE_HEX 1
#define ADC_RAMBANK2_MEMORY_INFO_HAS_BYTE_LANE 0
#define ADC_RAMBANK2_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define ADC_RAMBANK2_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define ADC_RAMBANK2_MEMORY_INFO_MEM_INIT_FILENAME soc_system_adc_ramBank2

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * The macros are prefixed with 'SYSID_QSYS_'.
 * The prefix is the slave descriptor.
 */
#define SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define SYSID_QSYS_BASE 0x10000
#define SYSID_QSYS_SPAN 8
#define SYSID_QSYS_END 0x10007
#define SYSID_QSYS_ID 2899645186
#define SYSID_QSYS_TIMESTAMP 1554841968

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * The macros are prefixed with 'JTAG_UART_'.
 * The prefix is the slave descriptor.
 */
#define JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define JTAG_UART_COMPONENT_NAME jtag_uart
#define JTAG_UART_BASE 0x20000
#define JTAG_UART_SPAN 8
#define JTAG_UART_END 0x20007
#define JTAG_UART_IRQ 2
#define JTAG_UART_READ_DEPTH 64
#define JTAG_UART_READ_THRESHOLD 8
#define JTAG_UART_WRITE_DEPTH 64
#define JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'tx_loopAddressRegister', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'TX_LOOPADDRESSREGISTER_'.
 * The prefix is the slave descriptor.
 */
#define TX_LOOPADDRESSREGISTER_COMPONENT_TYPE altera_avalon_onchip_memory2
#define TX_LOOPADDRESSREGISTER_COMPONENT_NAME tx_loopAddressRegister
#define TX_LOOPADDRESSREGISTER_BASE 0x28000
#define TX_LOOPADDRESSREGISTER_SPAN 64
#define TX_LOOPADDRESSREGISTER_END 0x2803f
#define TX_LOOPADDRESSREGISTER_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define TX_LOOPADDRESSREGISTER_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define TX_LOOPADDRESSREGISTER_CONTENTS_INFO ""
#define TX_LOOPADDRESSREGISTER_DUAL_PORT 1
#define TX_LOOPADDRESSREGISTER_GUI_RAM_BLOCK_TYPE AUTO
#define TX_LOOPADDRESSREGISTER_INIT_CONTENTS_FILE soc_system_tx_loopAddressRegister
#define TX_LOOPADDRESSREGISTER_INIT_MEM_CONTENT 1
#define TX_LOOPADDRESSREGISTER_INSTANCE_ID NONE
#define TX_LOOPADDRESSREGISTER_NON_DEFAULT_INIT_FILE_ENABLED 0
#define TX_LOOPADDRESSREGISTER_RAM_BLOCK_TYPE AUTO
#define TX_LOOPADDRESSREGISTER_READ_DURING_WRITE_MODE DONT_CARE
#define TX_LOOPADDRESSREGISTER_SINGLE_CLOCK_OP 0
#define TX_LOOPADDRESSREGISTER_SIZE_MULTIPLE 1
#define TX_LOOPADDRESSREGISTER_SIZE_VALUE 64
#define TX_LOOPADDRESSREGISTER_WRITABLE 1
#define TX_LOOPADDRESSREGISTER_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define TX_LOOPADDRESSREGISTER_MEMORY_INFO_GENERATE_DAT_SYM 1
#define TX_LOOPADDRESSREGISTER_MEMORY_INFO_GENERATE_HEX 1
#define TX_LOOPADDRESSREGISTER_MEMORY_INFO_HAS_BYTE_LANE 0
#define TX_LOOPADDRESSREGISTER_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define TX_LOOPADDRESSREGISTER_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define TX_LOOPADDRESSREGISTER_MEMORY_INFO_MEM_INIT_FILENAME soc_system_tx_loopAddressRegister

/*
 * Macros for device 'tx_loopCounterRegister', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'TX_LOOPCOUNTERREGISTER_'.
 * The prefix is the slave descriptor.
 */
#define TX_LOOPCOUNTERREGISTER_COMPONENT_TYPE altera_avalon_onchip_memory2
#define TX_LOOPCOUNTERREGISTER_COMPONENT_NAME tx_loopCounterRegister
#define TX_LOOPCOUNTERREGISTER_BASE 0x28040
#define TX_LOOPCOUNTERREGISTER_SPAN 64
#define TX_LOOPCOUNTERREGISTER_END 0x2807f
#define TX_LOOPCOUNTERREGISTER_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define TX_LOOPCOUNTERREGISTER_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define TX_LOOPCOUNTERREGISTER_CONTENTS_INFO ""
#define TX_LOOPCOUNTERREGISTER_DUAL_PORT 1
#define TX_LOOPCOUNTERREGISTER_GUI_RAM_BLOCK_TYPE AUTO
#define TX_LOOPCOUNTERREGISTER_INIT_CONTENTS_FILE soc_system_tx_loopCounterRegister
#define TX_LOOPCOUNTERREGISTER_INIT_MEM_CONTENT 1
#define TX_LOOPCOUNTERREGISTER_INSTANCE_ID NONE
#define TX_LOOPCOUNTERREGISTER_NON_DEFAULT_INIT_FILE_ENABLED 0
#define TX_LOOPCOUNTERREGISTER_RAM_BLOCK_TYPE AUTO
#define TX_LOOPCOUNTERREGISTER_READ_DURING_WRITE_MODE DONT_CARE
#define TX_LOOPCOUNTERREGISTER_SINGLE_CLOCK_OP 0
#define TX_LOOPCOUNTERREGISTER_SIZE_MULTIPLE 1
#define TX_LOOPCOUNTERREGISTER_SIZE_VALUE 64
#define TX_LOOPCOUNTERREGISTER_WRITABLE 1
#define TX_LOOPCOUNTERREGISTER_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define TX_LOOPCOUNTERREGISTER_MEMORY_INFO_GENERATE_DAT_SYM 1
#define TX_LOOPCOUNTERREGISTER_MEMORY_INFO_GENERATE_HEX 1
#define TX_LOOPCOUNTERREGISTER_MEMORY_INFO_HAS_BYTE_LANE 0
#define TX_LOOPCOUNTERREGISTER_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define TX_LOOPCOUNTERREGISTER_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define TX_LOOPCOUNTERREGISTER_MEMORY_INFO_MEM_INIT_FILENAME soc_system_tx_loopCounterRegister

/*
 * Macros for device 'tx_DMAOutputControlRegister', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'TX_DMAOUTPUTCONTROLREGISTER_'.
 * The prefix is the slave descriptor.
 */
#define TX_DMAOUTPUTCONTROLREGISTER_COMPONENT_TYPE altera_avalon_onchip_memory2
#define TX_DMAOUTPUTCONTROLREGISTER_COMPONENT_NAME tx_DMAOutputControlRegister
#define TX_DMAOUTPUTCONTROLREGISTER_BASE 0x28080
#define TX_DMAOUTPUTCONTROLREGISTER_SPAN 128
#define TX_DMAOUTPUTCONTROLREGISTER_END 0x280ff
#define TX_DMAOUTPUTCONTROLREGISTER_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define TX_DMAOUTPUTCONTROLREGISTER_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define TX_DMAOUTPUTCONTROLREGISTER_CONTENTS_INFO ""
#define TX_DMAOUTPUTCONTROLREGISTER_DUAL_PORT 1
#define TX_DMAOUTPUTCONTROLREGISTER_GUI_RAM_BLOCK_TYPE AUTO
#define TX_DMAOUTPUTCONTROLREGISTER_INIT_CONTENTS_FILE soc_system_tx_DMAOutputControlRegister
#define TX_DMAOUTPUTCONTROLREGISTER_INIT_MEM_CONTENT 1
#define TX_DMAOUTPUTCONTROLREGISTER_INSTANCE_ID NONE
#define TX_DMAOUTPUTCONTROLREGISTER_NON_DEFAULT_INIT_FILE_ENABLED 0
#define TX_DMAOUTPUTCONTROLREGISTER_RAM_BLOCK_TYPE AUTO
#define TX_DMAOUTPUTCONTROLREGISTER_READ_DURING_WRITE_MODE DONT_CARE
#define TX_DMAOUTPUTCONTROLREGISTER_SINGLE_CLOCK_OP 0
#define TX_DMAOUTPUTCONTROLREGISTER_SIZE_MULTIPLE 1
#define TX_DMAOUTPUTCONTROLREGISTER_SIZE_VALUE 128
#define TX_DMAOUTPUTCONTROLREGISTER_WRITABLE 1
#define TX_DMAOUTPUTCONTROLREGISTER_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define TX_DMAOUTPUTCONTROLREGISTER_MEMORY_INFO_GENERATE_DAT_SYM 1
#define TX_DMAOUTPUTCONTROLREGISTER_MEMORY_INFO_GENERATE_HEX 1
#define TX_DMAOUTPUTCONTROLREGISTER_MEMORY_INFO_HAS_BYTE_LANE 0
#define TX_DMAOUTPUTCONTROLREGISTER_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define TX_DMAOUTPUTCONTROLREGISTER_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define TX_DMAOUTPUTCONTROLREGISTER_MEMORY_INFO_MEM_INIT_FILENAME soc_system_tx_DMAOutputControlRegister

/*
 * Macros for device 'tx_DMATimingRegister', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'TX_DMATIMINGREGISTER_'.
 * The prefix is the slave descriptor.
 */
#define TX_DMATIMINGREGISTER_COMPONENT_TYPE altera_avalon_onchip_memory2
#define TX_DMATIMINGREGISTER_COMPONENT_NAME tx_DMATimingRegister
#define TX_DMATIMINGREGISTER_BASE 0x28100
#define TX_DMATIMINGREGISTER_SPAN 128
#define TX_DMATIMINGREGISTER_END 0x2817f
#define TX_DMATIMINGREGISTER_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define TX_DMATIMINGREGISTER_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define TX_DMATIMINGREGISTER_CONTENTS_INFO ""
#define TX_DMATIMINGREGISTER_DUAL_PORT 1
#define TX_DMATIMINGREGISTER_GUI_RAM_BLOCK_TYPE AUTO
#define TX_DMATIMINGREGISTER_INIT_CONTENTS_FILE soc_system_tx_DMATimingRegister
#define TX_DMATIMINGREGISTER_INIT_MEM_CONTENT 1
#define TX_DMATIMINGREGISTER_INSTANCE_ID NONE
#define TX_DMATIMINGREGISTER_NON_DEFAULT_INIT_FILE_ENABLED 0
#define TX_DMATIMINGREGISTER_RAM_BLOCK_TYPE AUTO
#define TX_DMATIMINGREGISTER_READ_DURING_WRITE_MODE DONT_CARE
#define TX_DMATIMINGREGISTER_SINGLE_CLOCK_OP 0
#define TX_DMATIMINGREGISTER_SIZE_MULTIPLE 1
#define TX_DMATIMINGREGISTER_SIZE_VALUE 128
#define TX_DMATIMINGREGISTER_WRITABLE 1
#define TX_DMATIMINGREGISTER_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define TX_DMATIMINGREGISTER_MEMORY_INFO_GENERATE_DAT_SYM 1
#define TX_DMATIMINGREGISTER_MEMORY_INFO_GENERATE_HEX 1
#define TX_DMATIMINGREGISTER_MEMORY_INFO_HAS_BYTE_LANE 0
#define TX_DMATIMINGREGISTER_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define TX_DMATIMINGREGISTER_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define TX_DMATIMINGREGISTER_MEMORY_INFO_MEM_INIT_FILENAME soc_system_tx_DMATimingRegister

/*
 * Macros for device 'tx_outputControlRegister', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'TX_OUTPUTCONTROLREGISTER_'.
 * The prefix is the slave descriptor.
 */
#define TX_OUTPUTCONTROLREGISTER_COMPONENT_TYPE altera_avalon_onchip_memory2
#define TX_OUTPUTCONTROLREGISTER_COMPONENT_NAME tx_outputControlRegister
#define TX_OUTPUTCONTROLREGISTER_BASE 0x40000
#define TX_OUTPUTCONTROLREGISTER_SPAN 131072
#define TX_OUTPUTCONTROLREGISTER_END 0x5ffff
#define TX_OUTPUTCONTROLREGISTER_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define TX_OUTPUTCONTROLREGISTER_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define TX_OUTPUTCONTROLREGISTER_CONTENTS_INFO ""
#define TX_OUTPUTCONTROLREGISTER_DUAL_PORT 1
#define TX_OUTPUTCONTROLREGISTER_GUI_RAM_BLOCK_TYPE AUTO
#define TX_OUTPUTCONTROLREGISTER_INIT_CONTENTS_FILE soc_system_tx_outputControlRegister
#define TX_OUTPUTCONTROLREGISTER_INIT_MEM_CONTENT 1
#define TX_OUTPUTCONTROLREGISTER_INSTANCE_ID NONE
#define TX_OUTPUTCONTROLREGISTER_NON_DEFAULT_INIT_FILE_ENABLED 0
#define TX_OUTPUTCONTROLREGISTER_RAM_BLOCK_TYPE AUTO
#define TX_OUTPUTCONTROLREGISTER_READ_DURING_WRITE_MODE DONT_CARE
#define TX_OUTPUTCONTROLREGISTER_SINGLE_CLOCK_OP 0
#define TX_OUTPUTCONTROLREGISTER_SIZE_MULTIPLE 1
#define TX_OUTPUTCONTROLREGISTER_SIZE_VALUE 131072
#define TX_OUTPUTCONTROLREGISTER_WRITABLE 1
#define TX_OUTPUTCONTROLREGISTER_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define TX_OUTPUTCONTROLREGISTER_MEMORY_INFO_GENERATE_DAT_SYM 1
#define TX_OUTPUTCONTROLREGISTER_MEMORY_INFO_GENERATE_HEX 1
#define TX_OUTPUTCONTROLREGISTER_MEMORY_INFO_HAS_BYTE_LANE 0
#define TX_OUTPUTCONTROLREGISTER_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define TX_OUTPUTCONTROLREGISTER_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define TX_OUTPUTCONTROLREGISTER_MEMORY_INFO_MEM_INIT_FILENAME soc_system_tx_outputControlRegister

/*
 * Macros for device 'tx_timingRegister', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'TX_TIMINGREGISTER_'.
 * The prefix is the slave descriptor.
 */
#define TX_TIMINGREGISTER_COMPONENT_TYPE altera_avalon_onchip_memory2
#define TX_TIMINGREGISTER_COMPONENT_NAME tx_timingRegister
#define TX_TIMINGREGISTER_BASE 0x60000
#define TX_TIMINGREGISTER_SPAN 131072
#define TX_TIMINGREGISTER_END 0x7ffff
#define TX_TIMINGREGISTER_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define TX_TIMINGREGISTER_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define TX_TIMINGREGISTER_CONTENTS_INFO ""
#define TX_TIMINGREGISTER_DUAL_PORT 1
#define TX_TIMINGREGISTER_GUI_RAM_BLOCK_TYPE AUTO
#define TX_TIMINGREGISTER_INIT_CONTENTS_FILE soc_system_tx_timingRegister
#define TX_TIMINGREGISTER_INIT_MEM_CONTENT 1
#define TX_TIMINGREGISTER_INSTANCE_ID NONE
#define TX_TIMINGREGISTER_NON_DEFAULT_INIT_FILE_ENABLED 0
#define TX_TIMINGREGISTER_RAM_BLOCK_TYPE AUTO
#define TX_TIMINGREGISTER_READ_DURING_WRITE_MODE DONT_CARE
#define TX_TIMINGREGISTER_SINGLE_CLOCK_OP 0
#define TX_TIMINGREGISTER_SIZE_MULTIPLE 1
#define TX_TIMINGREGISTER_SIZE_VALUE 131072
#define TX_TIMINGREGISTER_WRITABLE 1
#define TX_TIMINGREGISTER_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define TX_TIMINGREGISTER_MEMORY_INFO_GENERATE_DAT_SYM 1
#define TX_TIMINGREGISTER_MEMORY_INFO_GENERATE_HEX 1
#define TX_TIMINGREGISTER_MEMORY_INFO_HAS_BYTE_LANE 0
#define TX_TIMINGREGISTER_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define TX_TIMINGREGISTER_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define TX_TIMINGREGISTER_MEMORY_INFO_MEM_INIT_FILENAME soc_system_tx_timingRegister


#endif /* _ALTERA_HPS_0_INT_H_ */
