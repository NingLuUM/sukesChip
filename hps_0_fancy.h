#ifndef _ALTERA_HPS_0_FANCY_H_
#define _ALTERA_HPS_0_FANCY_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file './soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'adc_ramBank0', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'ADC_RAMBANK0_'.
 * The prefix is the slave descriptor.
 */
#define ADC_RAMBANK0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define ADC_RAMBANK0_COMPONENT_NAME adc_ramBank0
#define ADC_RAMBANK0_BASE 0x0
#define ADC_RAMBANK0_SPAN 32768
#define ADC_RAMBANK0_END 0x7fff
#define ADC_RAMBANK0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define ADC_RAMBANK0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define ADC_RAMBANK0_CONTENTS_INFO ""
#define ADC_RAMBANK0_DUAL_PORT 1
#define ADC_RAMBANK0_GUI_RAM_BLOCK_TYPE AUTO
#define ADC_RAMBANK0_INIT_CONTENTS_FILE soc_system_adc_ramBank0
#define ADC_RAMBANK0_INIT_MEM_CONTENT 1
#define ADC_RAMBANK0_INSTANCE_ID NONE
#define ADC_RAMBANK0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define ADC_RAMBANK0_RAM_BLOCK_TYPE AUTO
#define ADC_RAMBANK0_READ_DURING_WRITE_MODE DONT_CARE
#define ADC_RAMBANK0_SINGLE_CLOCK_OP 0
#define ADC_RAMBANK0_SIZE_MULTIPLE 1
#define ADC_RAMBANK0_SIZE_VALUE 32768
#define ADC_RAMBANK0_WRITABLE 1
#define ADC_RAMBANK0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define ADC_RAMBANK0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define ADC_RAMBANK0_MEMORY_INFO_GENERATE_HEX 1
#define ADC_RAMBANK0_MEMORY_INFO_HAS_BYTE_LANE 0
#define ADC_RAMBANK0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define ADC_RAMBANK0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define ADC_RAMBANK0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_adc_ramBank0

/*
 * Macros for device 'pio_tx_interrupt_generator_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_TX_INTERRUPT_GENERATOR_0_'.
 * The prefix is the slave descriptor.
 */
#define PIO_TX_INTERRUPT_GENERATOR_0_COMPONENT_TYPE altera_avalon_pio
#define PIO_TX_INTERRUPT_GENERATOR_0_COMPONENT_NAME pio_tx_interrupt_generator_0
#define PIO_TX_INTERRUPT_GENERATOR_0_BASE 0x0
#define PIO_TX_INTERRUPT_GENERATOR_0_SPAN 16
#define PIO_TX_INTERRUPT_GENERATOR_0_END 0xf
#define PIO_TX_INTERRUPT_GENERATOR_0_IRQ 3
#define PIO_TX_INTERRUPT_GENERATOR_0_BIT_CLEARING_EDGE_REGISTER 1
#define PIO_TX_INTERRUPT_GENERATOR_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_TX_INTERRUPT_GENERATOR_0_CAPTURE 1
#define PIO_TX_INTERRUPT_GENERATOR_0_DATA_WIDTH 8
#define PIO_TX_INTERRUPT_GENERATOR_0_DO_TEST_BENCH_WIRING 0
#define PIO_TX_INTERRUPT_GENERATOR_0_DRIVEN_SIM_VALUE 0
#define PIO_TX_INTERRUPT_GENERATOR_0_EDGE_TYPE RISING
#define PIO_TX_INTERRUPT_GENERATOR_0_FREQ 50000000
#define PIO_TX_INTERRUPT_GENERATOR_0_HAS_IN 1
#define PIO_TX_INTERRUPT_GENERATOR_0_HAS_OUT 0
#define PIO_TX_INTERRUPT_GENERATOR_0_HAS_TRI 0
#define PIO_TX_INTERRUPT_GENERATOR_0_IRQ_TYPE EDGE
#define PIO_TX_INTERRUPT_GENERATOR_0_RESET_VALUE 0

/*
 * Macros for device 'pio_tx_interrupt_generator_1', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_TX_INTERRUPT_GENERATOR_1_'.
 * The prefix is the slave descriptor.
 */
#define PIO_TX_INTERRUPT_GENERATOR_1_COMPONENT_TYPE altera_avalon_pio
#define PIO_TX_INTERRUPT_GENERATOR_1_COMPONENT_NAME pio_tx_interrupt_generator_1
#define PIO_TX_INTERRUPT_GENERATOR_1_BASE 0x10
#define PIO_TX_INTERRUPT_GENERATOR_1_SPAN 16
#define PIO_TX_INTERRUPT_GENERATOR_1_END 0x1f
#define PIO_TX_INTERRUPT_GENERATOR_1_IRQ 1
#define PIO_TX_INTERRUPT_GENERATOR_1_BIT_CLEARING_EDGE_REGISTER 1
#define PIO_TX_INTERRUPT_GENERATOR_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_TX_INTERRUPT_GENERATOR_1_CAPTURE 1
#define PIO_TX_INTERRUPT_GENERATOR_1_DATA_WIDTH 8
#define PIO_TX_INTERRUPT_GENERATOR_1_DO_TEST_BENCH_WIRING 0
#define PIO_TX_INTERRUPT_GENERATOR_1_DRIVEN_SIM_VALUE 0
#define PIO_TX_INTERRUPT_GENERATOR_1_EDGE_TYPE RISING
#define PIO_TX_INTERRUPT_GENERATOR_1_FREQ 50000000
#define PIO_TX_INTERRUPT_GENERATOR_1_HAS_IN 1
#define PIO_TX_INTERRUPT_GENERATOR_1_HAS_OUT 0
#define PIO_TX_INTERRUPT_GENERATOR_1_HAS_TRI 0
#define PIO_TX_INTERRUPT_GENERATOR_1_IRQ_TYPE EDGE
#define PIO_TX_INTERRUPT_GENERATOR_1_RESET_VALUE 0

/*
 * Macros for device 'pio_adc_interrupt_generator', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_ADC_INTERRUPT_GENERATOR_'.
 * The prefix is the slave descriptor.
 */
#define PIO_ADC_INTERRUPT_GENERATOR_COMPONENT_TYPE altera_avalon_pio
#define PIO_ADC_INTERRUPT_GENERATOR_COMPONENT_NAME pio_adc_interrupt_generator
#define PIO_ADC_INTERRUPT_GENERATOR_BASE 0x20
#define PIO_ADC_INTERRUPT_GENERATOR_SPAN 16
#define PIO_ADC_INTERRUPT_GENERATOR_END 0x2f
#define PIO_ADC_INTERRUPT_GENERATOR_IRQ 0
#define PIO_ADC_INTERRUPT_GENERATOR_BIT_CLEARING_EDGE_REGISTER 1
#define PIO_ADC_INTERRUPT_GENERATOR_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_ADC_INTERRUPT_GENERATOR_CAPTURE 1
#define PIO_ADC_INTERRUPT_GENERATOR_DATA_WIDTH 8
#define PIO_ADC_INTERRUPT_GENERATOR_DO_TEST_BENCH_WIRING 0
#define PIO_ADC_INTERRUPT_GENERATOR_DRIVEN_SIM_VALUE 0
#define PIO_ADC_INTERRUPT_GENERATOR_EDGE_TYPE RISING
#define PIO_ADC_INTERRUPT_GENERATOR_FREQ 50000000
#define PIO_ADC_INTERRUPT_GENERATOR_HAS_IN 1
#define PIO_ADC_INTERRUPT_GENERATOR_HAS_OUT 0
#define PIO_ADC_INTERRUPT_GENERATOR_HAS_TRI 0
#define PIO_ADC_INTERRUPT_GENERATOR_IRQ_TYPE EDGE
#define PIO_ADC_INTERRUPT_GENERATOR_RESET_VALUE 0

/*
 * Macros for device 'pio_txControlComms', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_TXCONTROLCOMMS_'.
 * The prefix is the slave descriptor.
 */
#define PIO_TXCONTROLCOMMS_COMPONENT_TYPE altera_avalon_pio
#define PIO_TXCONTROLCOMMS_COMPONENT_NAME pio_txControlComms
#define PIO_TXCONTROLCOMMS_BASE 0x30
#define PIO_TXCONTROLCOMMS_SPAN 16
#define PIO_TXCONTROLCOMMS_END 0x3f
#define PIO_TXCONTROLCOMMS_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_TXCONTROLCOMMS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_TXCONTROLCOMMS_CAPTURE 0
#define PIO_TXCONTROLCOMMS_DATA_WIDTH 8
#define PIO_TXCONTROLCOMMS_DO_TEST_BENCH_WIRING 0
#define PIO_TXCONTROLCOMMS_DRIVEN_SIM_VALUE 0
#define PIO_TXCONTROLCOMMS_EDGE_TYPE NONE
#define PIO_TXCONTROLCOMMS_FREQ 50000000
#define PIO_TXCONTROLCOMMS_HAS_IN 0
#define PIO_TXCONTROLCOMMS_HAS_OUT 1
#define PIO_TXCONTROLCOMMS_HAS_TRI 0
#define PIO_TXCONTROLCOMMS_IRQ_TYPE NONE
#define PIO_TXCONTROLCOMMS_RESET_VALUE 0

/*
 * Macros for device 'pio_set_txChannelMask', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_SET_TXCHANNELMASK_'.
 * The prefix is the slave descriptor.
 */
#define PIO_SET_TXCHANNELMASK_COMPONENT_TYPE altera_avalon_pio
#define PIO_SET_TXCHANNELMASK_COMPONENT_NAME pio_set_txChannelMask
#define PIO_SET_TXCHANNELMASK_BASE 0x40
#define PIO_SET_TXCHANNELMASK_SPAN 16
#define PIO_SET_TXCHANNELMASK_END 0x4f
#define PIO_SET_TXCHANNELMASK_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_SET_TXCHANNELMASK_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_SET_TXCHANNELMASK_CAPTURE 0
#define PIO_SET_TXCHANNELMASK_DATA_WIDTH 8
#define PIO_SET_TXCHANNELMASK_DO_TEST_BENCH_WIRING 0
#define PIO_SET_TXCHANNELMASK_DRIVEN_SIM_VALUE 0
#define PIO_SET_TXCHANNELMASK_EDGE_TYPE NONE
#define PIO_SET_TXCHANNELMASK_FREQ 50000000
#define PIO_SET_TXCHANNELMASK_HAS_IN 0
#define PIO_SET_TXCHANNELMASK_HAS_OUT 1
#define PIO_SET_TXCHANNELMASK_HAS_TRI 0
#define PIO_SET_TXCHANNELMASK_IRQ_TYPE NONE
#define PIO_SET_TXCHANNELMASK_RESET_VALUE 0

/*
 * Macros for device 'pio_led', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_LED_'.
 * The prefix is the slave descriptor.
 */
#define PIO_LED_COMPONENT_TYPE altera_avalon_pio
#define PIO_LED_COMPONENT_NAME pio_led
#define PIO_LED_BASE 0x50
#define PIO_LED_SPAN 16
#define PIO_LED_END 0x5f
#define PIO_LED_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_LED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_LED_CAPTURE 0
#define PIO_LED_DATA_WIDTH 8
#define PIO_LED_DO_TEST_BENCH_WIRING 0
#define PIO_LED_DRIVEN_SIM_VALUE 0
#define PIO_LED_EDGE_TYPE NONE
#define PIO_LED_FREQ 50000000
#define PIO_LED_HAS_IN 0
#define PIO_LED_HAS_OUT 1
#define PIO_LED_HAS_TRI 0
#define PIO_LED_IRQ_TYPE NONE
#define PIO_LED_RESET_VALUE 255

/*
 * Macros for device 'pio_trig_val', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_TRIG_VAL_'.
 * The prefix is the slave descriptor.
 */
#define PIO_TRIG_VAL_COMPONENT_TYPE altera_avalon_pio
#define PIO_TRIG_VAL_COMPONENT_NAME pio_trig_val
#define PIO_TRIG_VAL_BASE 0x60
#define PIO_TRIG_VAL_SPAN 16
#define PIO_TRIG_VAL_END 0x6f
#define PIO_TRIG_VAL_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_TRIG_VAL_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_TRIG_VAL_CAPTURE 0
#define PIO_TRIG_VAL_DATA_WIDTH 8
#define PIO_TRIG_VAL_DO_TEST_BENCH_WIRING 0
#define PIO_TRIG_VAL_DRIVEN_SIM_VALUE 0
#define PIO_TRIG_VAL_EDGE_TYPE NONE
#define PIO_TRIG_VAL_FREQ 50000000
#define PIO_TRIG_VAL_HAS_IN 0
#define PIO_TRIG_VAL_HAS_OUT 1
#define PIO_TRIG_VAL_HAS_TRI 0
#define PIO_TRIG_VAL_IRQ_TYPE NONE
#define PIO_TRIG_VAL_RESET_VALUE 255

/*
 * Macros for device 'pio_trig_rest_levels', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_TRIG_REST_LEVELS_'.
 * The prefix is the slave descriptor.
 */
#define PIO_TRIG_REST_LEVELS_COMPONENT_TYPE altera_avalon_pio
#define PIO_TRIG_REST_LEVELS_COMPONENT_NAME pio_trig_rest_levels
#define PIO_TRIG_REST_LEVELS_BASE 0x70
#define PIO_TRIG_REST_LEVELS_SPAN 16
#define PIO_TRIG_REST_LEVELS_END 0x7f
#define PIO_TRIG_REST_LEVELS_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_TRIG_REST_LEVELS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_TRIG_REST_LEVELS_CAPTURE 0
#define PIO_TRIG_REST_LEVELS_DATA_WIDTH 8
#define PIO_TRIG_REST_LEVELS_DO_TEST_BENCH_WIRING 0
#define PIO_TRIG_REST_LEVELS_DRIVEN_SIM_VALUE 0
#define PIO_TRIG_REST_LEVELS_EDGE_TYPE NONE
#define PIO_TRIG_REST_LEVELS_FREQ 50000000
#define PIO_TRIG_REST_LEVELS_HAS_IN 0
#define PIO_TRIG_REST_LEVELS_HAS_OUT 1
#define PIO_TRIG_REST_LEVELS_HAS_TRI 0
#define PIO_TRIG_REST_LEVELS_IRQ_TYPE NONE
#define PIO_TRIG_REST_LEVELS_RESET_VALUE 255

/*
 * Macros for device 'fire_PhaseCharge_ch0', class 'altera_avalon_pio'
 * The macros are prefixed with 'FIRE_PHASECHARGE_CH0_'.
 * The prefix is the slave descriptor.
 */
#define FIRE_PHASECHARGE_CH0_COMPONENT_TYPE altera_avalon_pio
#define FIRE_PHASECHARGE_CH0_COMPONENT_NAME fire_PhaseCharge_ch0
#define FIRE_PHASECHARGE_CH0_BASE 0x80
#define FIRE_PHASECHARGE_CH0_SPAN 16
#define FIRE_PHASECHARGE_CH0_END 0x8f
#define FIRE_PHASECHARGE_CH0_BIT_CLEARING_EDGE_REGISTER 0
#define FIRE_PHASECHARGE_CH0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FIRE_PHASECHARGE_CH0_CAPTURE 0
#define FIRE_PHASECHARGE_CH0_DATA_WIDTH 32
#define FIRE_PHASECHARGE_CH0_DO_TEST_BENCH_WIRING 0
#define FIRE_PHASECHARGE_CH0_DRIVEN_SIM_VALUE 0
#define FIRE_PHASECHARGE_CH0_EDGE_TYPE NONE
#define FIRE_PHASECHARGE_CH0_FREQ 50000000
#define FIRE_PHASECHARGE_CH0_HAS_IN 0
#define FIRE_PHASECHARGE_CH0_HAS_OUT 1
#define FIRE_PHASECHARGE_CH0_HAS_TRI 0
#define FIRE_PHASECHARGE_CH0_IRQ_TYPE NONE
#define FIRE_PHASECHARGE_CH0_RESET_VALUE 0

/*
 * Macros for device 'fire_PhaseCharge_ch1', class 'altera_avalon_pio'
 * The macros are prefixed with 'FIRE_PHASECHARGE_CH1_'.
 * The prefix is the slave descriptor.
 */
#define FIRE_PHASECHARGE_CH1_COMPONENT_TYPE altera_avalon_pio
#define FIRE_PHASECHARGE_CH1_COMPONENT_NAME fire_PhaseCharge_ch1
#define FIRE_PHASECHARGE_CH1_BASE 0x90
#define FIRE_PHASECHARGE_CH1_SPAN 16
#define FIRE_PHASECHARGE_CH1_END 0x9f
#define FIRE_PHASECHARGE_CH1_BIT_CLEARING_EDGE_REGISTER 0
#define FIRE_PHASECHARGE_CH1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FIRE_PHASECHARGE_CH1_CAPTURE 0
#define FIRE_PHASECHARGE_CH1_DATA_WIDTH 32
#define FIRE_PHASECHARGE_CH1_DO_TEST_BENCH_WIRING 0
#define FIRE_PHASECHARGE_CH1_DRIVEN_SIM_VALUE 0
#define FIRE_PHASECHARGE_CH1_EDGE_TYPE NONE
#define FIRE_PHASECHARGE_CH1_FREQ 50000000
#define FIRE_PHASECHARGE_CH1_HAS_IN 0
#define FIRE_PHASECHARGE_CH1_HAS_OUT 1
#define FIRE_PHASECHARGE_CH1_HAS_TRI 0
#define FIRE_PHASECHARGE_CH1_IRQ_TYPE NONE
#define FIRE_PHASECHARGE_CH1_RESET_VALUE 0

/*
 * Macros for device 'fire_PhaseCharge_ch2', class 'altera_avalon_pio'
 * The macros are prefixed with 'FIRE_PHASECHARGE_CH2_'.
 * The prefix is the slave descriptor.
 */
#define FIRE_PHASECHARGE_CH2_COMPONENT_TYPE altera_avalon_pio
#define FIRE_PHASECHARGE_CH2_COMPONENT_NAME fire_PhaseCharge_ch2
#define FIRE_PHASECHARGE_CH2_BASE 0x100
#define FIRE_PHASECHARGE_CH2_SPAN 16
#define FIRE_PHASECHARGE_CH2_END 0x10f
#define FIRE_PHASECHARGE_CH2_BIT_CLEARING_EDGE_REGISTER 0
#define FIRE_PHASECHARGE_CH2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FIRE_PHASECHARGE_CH2_CAPTURE 0
#define FIRE_PHASECHARGE_CH2_DATA_WIDTH 32
#define FIRE_PHASECHARGE_CH2_DO_TEST_BENCH_WIRING 0
#define FIRE_PHASECHARGE_CH2_DRIVEN_SIM_VALUE 0
#define FIRE_PHASECHARGE_CH2_EDGE_TYPE NONE
#define FIRE_PHASECHARGE_CH2_FREQ 50000000
#define FIRE_PHASECHARGE_CH2_HAS_IN 0
#define FIRE_PHASECHARGE_CH2_HAS_OUT 1
#define FIRE_PHASECHARGE_CH2_HAS_TRI 0
#define FIRE_PHASECHARGE_CH2_IRQ_TYPE NONE
#define FIRE_PHASECHARGE_CH2_RESET_VALUE 0

/*
 * Macros for device 'fire_PhaseCharge_ch3', class 'altera_avalon_pio'
 * The macros are prefixed with 'FIRE_PHASECHARGE_CH3_'.
 * The prefix is the slave descriptor.
 */
#define FIRE_PHASECHARGE_CH3_COMPONENT_TYPE altera_avalon_pio
#define FIRE_PHASECHARGE_CH3_COMPONENT_NAME fire_PhaseCharge_ch3
#define FIRE_PHASECHARGE_CH3_BASE 0x110
#define FIRE_PHASECHARGE_CH3_SPAN 16
#define FIRE_PHASECHARGE_CH3_END 0x11f
#define FIRE_PHASECHARGE_CH3_BIT_CLEARING_EDGE_REGISTER 0
#define FIRE_PHASECHARGE_CH3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FIRE_PHASECHARGE_CH3_CAPTURE 0
#define FIRE_PHASECHARGE_CH3_DATA_WIDTH 32
#define FIRE_PHASECHARGE_CH3_DO_TEST_BENCH_WIRING 0
#define FIRE_PHASECHARGE_CH3_DRIVEN_SIM_VALUE 0
#define FIRE_PHASECHARGE_CH3_EDGE_TYPE NONE
#define FIRE_PHASECHARGE_CH3_FREQ 50000000
#define FIRE_PHASECHARGE_CH3_HAS_IN 0
#define FIRE_PHASECHARGE_CH3_HAS_OUT 1
#define FIRE_PHASECHARGE_CH3_HAS_TRI 0
#define FIRE_PHASECHARGE_CH3_IRQ_TYPE NONE
#define FIRE_PHASECHARGE_CH3_RESET_VALUE 0

/*
 * Macros for device 'fire_PhaseCharge_ch4', class 'altera_avalon_pio'
 * The macros are prefixed with 'FIRE_PHASECHARGE_CH4_'.
 * The prefix is the slave descriptor.
 */
#define FIRE_PHASECHARGE_CH4_COMPONENT_TYPE altera_avalon_pio
#define FIRE_PHASECHARGE_CH4_COMPONENT_NAME fire_PhaseCharge_ch4
#define FIRE_PHASECHARGE_CH4_BASE 0x120
#define FIRE_PHASECHARGE_CH4_SPAN 16
#define FIRE_PHASECHARGE_CH4_END 0x12f
#define FIRE_PHASECHARGE_CH4_BIT_CLEARING_EDGE_REGISTER 0
#define FIRE_PHASECHARGE_CH4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FIRE_PHASECHARGE_CH4_CAPTURE 0
#define FIRE_PHASECHARGE_CH4_DATA_WIDTH 32
#define FIRE_PHASECHARGE_CH4_DO_TEST_BENCH_WIRING 0
#define FIRE_PHASECHARGE_CH4_DRIVEN_SIM_VALUE 0
#define FIRE_PHASECHARGE_CH4_EDGE_TYPE NONE
#define FIRE_PHASECHARGE_CH4_FREQ 50000000
#define FIRE_PHASECHARGE_CH4_HAS_IN 0
#define FIRE_PHASECHARGE_CH4_HAS_OUT 1
#define FIRE_PHASECHARGE_CH4_HAS_TRI 0
#define FIRE_PHASECHARGE_CH4_IRQ_TYPE NONE
#define FIRE_PHASECHARGE_CH4_RESET_VALUE 0

/*
 * Macros for device 'fire_PhaseCharge_ch5', class 'altera_avalon_pio'
 * The macros are prefixed with 'FIRE_PHASECHARGE_CH5_'.
 * The prefix is the slave descriptor.
 */
#define FIRE_PHASECHARGE_CH5_COMPONENT_TYPE altera_avalon_pio
#define FIRE_PHASECHARGE_CH5_COMPONENT_NAME fire_PhaseCharge_ch5
#define FIRE_PHASECHARGE_CH5_BASE 0x130
#define FIRE_PHASECHARGE_CH5_SPAN 16
#define FIRE_PHASECHARGE_CH5_END 0x13f
#define FIRE_PHASECHARGE_CH5_BIT_CLEARING_EDGE_REGISTER 0
#define FIRE_PHASECHARGE_CH5_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FIRE_PHASECHARGE_CH5_CAPTURE 0
#define FIRE_PHASECHARGE_CH5_DATA_WIDTH 32
#define FIRE_PHASECHARGE_CH5_DO_TEST_BENCH_WIRING 0
#define FIRE_PHASECHARGE_CH5_DRIVEN_SIM_VALUE 0
#define FIRE_PHASECHARGE_CH5_EDGE_TYPE NONE
#define FIRE_PHASECHARGE_CH5_FREQ 50000000
#define FIRE_PHASECHARGE_CH5_HAS_IN 0
#define FIRE_PHASECHARGE_CH5_HAS_OUT 1
#define FIRE_PHASECHARGE_CH5_HAS_TRI 0
#define FIRE_PHASECHARGE_CH5_IRQ_TYPE NONE
#define FIRE_PHASECHARGE_CH5_RESET_VALUE 0

/*
 * Macros for device 'fire_PhaseCharge_ch6', class 'altera_avalon_pio'
 * The macros are prefixed with 'FIRE_PHASECHARGE_CH6_'.
 * The prefix is the slave descriptor.
 */
#define FIRE_PHASECHARGE_CH6_COMPONENT_TYPE altera_avalon_pio
#define FIRE_PHASECHARGE_CH6_COMPONENT_NAME fire_PhaseCharge_ch6
#define FIRE_PHASECHARGE_CH6_BASE 0x140
#define FIRE_PHASECHARGE_CH6_SPAN 16
#define FIRE_PHASECHARGE_CH6_END 0x14f
#define FIRE_PHASECHARGE_CH6_BIT_CLEARING_EDGE_REGISTER 0
#define FIRE_PHASECHARGE_CH6_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FIRE_PHASECHARGE_CH6_CAPTURE 0
#define FIRE_PHASECHARGE_CH6_DATA_WIDTH 32
#define FIRE_PHASECHARGE_CH6_DO_TEST_BENCH_WIRING 0
#define FIRE_PHASECHARGE_CH6_DRIVEN_SIM_VALUE 0
#define FIRE_PHASECHARGE_CH6_EDGE_TYPE NONE
#define FIRE_PHASECHARGE_CH6_FREQ 50000000
#define FIRE_PHASECHARGE_CH6_HAS_IN 0
#define FIRE_PHASECHARGE_CH6_HAS_OUT 1
#define FIRE_PHASECHARGE_CH6_HAS_TRI 0
#define FIRE_PHASECHARGE_CH6_IRQ_TYPE NONE
#define FIRE_PHASECHARGE_CH6_RESET_VALUE 0

/*
 * Macros for device 'fire_PhaseCharge_ch7', class 'altera_avalon_pio'
 * The macros are prefixed with 'FIRE_PHASECHARGE_CH7_'.
 * The prefix is the slave descriptor.
 */
#define FIRE_PHASECHARGE_CH7_COMPONENT_TYPE altera_avalon_pio
#define FIRE_PHASECHARGE_CH7_COMPONENT_NAME fire_PhaseCharge_ch7
#define FIRE_PHASECHARGE_CH7_BASE 0x150
#define FIRE_PHASECHARGE_CH7_SPAN 16
#define FIRE_PHASECHARGE_CH7_END 0x15f
#define FIRE_PHASECHARGE_CH7_BIT_CLEARING_EDGE_REGISTER 0
#define FIRE_PHASECHARGE_CH7_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FIRE_PHASECHARGE_CH7_CAPTURE 0
#define FIRE_PHASECHARGE_CH7_DATA_WIDTH 32
#define FIRE_PHASECHARGE_CH7_DO_TEST_BENCH_WIRING 0
#define FIRE_PHASECHARGE_CH7_DRIVEN_SIM_VALUE 0
#define FIRE_PHASECHARGE_CH7_EDGE_TYPE NONE
#define FIRE_PHASECHARGE_CH7_FREQ 50000000
#define FIRE_PHASECHARGE_CH7_HAS_IN 0
#define FIRE_PHASECHARGE_CH7_HAS_OUT 1
#define FIRE_PHASECHARGE_CH7_HAS_TRI 0
#define FIRE_PHASECHARGE_CH7_IRQ_TYPE NONE
#define FIRE_PHASECHARGE_CH7_RESET_VALUE 0

/*
 * Macros for device 'fireAt_PhaseCharge_ch0', class 'altera_avalon_pio'
 * The macros are prefixed with 'FIREAT_PHASECHARGE_CH0_'.
 * The prefix is the slave descriptor.
 */
#define FIREAT_PHASECHARGE_CH0_COMPONENT_TYPE altera_avalon_pio
#define FIREAT_PHASECHARGE_CH0_COMPONENT_NAME fireAt_PhaseCharge_ch0
#define FIREAT_PHASECHARGE_CH0_BASE 0x160
#define FIREAT_PHASECHARGE_CH0_SPAN 16
#define FIREAT_PHASECHARGE_CH0_END 0x16f
#define FIREAT_PHASECHARGE_CH0_BIT_CLEARING_EDGE_REGISTER 0
#define FIREAT_PHASECHARGE_CH0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FIREAT_PHASECHARGE_CH0_CAPTURE 0
#define FIREAT_PHASECHARGE_CH0_DATA_WIDTH 32
#define FIREAT_PHASECHARGE_CH0_DO_TEST_BENCH_WIRING 0
#define FIREAT_PHASECHARGE_CH0_DRIVEN_SIM_VALUE 0
#define FIREAT_PHASECHARGE_CH0_EDGE_TYPE NONE
#define FIREAT_PHASECHARGE_CH0_FREQ 50000000
#define FIREAT_PHASECHARGE_CH0_HAS_IN 0
#define FIREAT_PHASECHARGE_CH0_HAS_OUT 1
#define FIREAT_PHASECHARGE_CH0_HAS_TRI 0
#define FIREAT_PHASECHARGE_CH0_IRQ_TYPE NONE
#define FIREAT_PHASECHARGE_CH0_RESET_VALUE 0

/*
 * Macros for device 'fireAt_PhaseCharge_ch1', class 'altera_avalon_pio'
 * The macros are prefixed with 'FIREAT_PHASECHARGE_CH1_'.
 * The prefix is the slave descriptor.
 */
#define FIREAT_PHASECHARGE_CH1_COMPONENT_TYPE altera_avalon_pio
#define FIREAT_PHASECHARGE_CH1_COMPONENT_NAME fireAt_PhaseCharge_ch1
#define FIREAT_PHASECHARGE_CH1_BASE 0x170
#define FIREAT_PHASECHARGE_CH1_SPAN 16
#define FIREAT_PHASECHARGE_CH1_END 0x17f
#define FIREAT_PHASECHARGE_CH1_BIT_CLEARING_EDGE_REGISTER 0
#define FIREAT_PHASECHARGE_CH1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FIREAT_PHASECHARGE_CH1_CAPTURE 0
#define FIREAT_PHASECHARGE_CH1_DATA_WIDTH 32
#define FIREAT_PHASECHARGE_CH1_DO_TEST_BENCH_WIRING 0
#define FIREAT_PHASECHARGE_CH1_DRIVEN_SIM_VALUE 0
#define FIREAT_PHASECHARGE_CH1_EDGE_TYPE NONE
#define FIREAT_PHASECHARGE_CH1_FREQ 50000000
#define FIREAT_PHASECHARGE_CH1_HAS_IN 0
#define FIREAT_PHASECHARGE_CH1_HAS_OUT 1
#define FIREAT_PHASECHARGE_CH1_HAS_TRI 0
#define FIREAT_PHASECHARGE_CH1_IRQ_TYPE NONE
#define FIREAT_PHASECHARGE_CH1_RESET_VALUE 0

/*
 * Macros for device 'fireAt_PhaseCharge_ch2', class 'altera_avalon_pio'
 * The macros are prefixed with 'FIREAT_PHASECHARGE_CH2_'.
 * The prefix is the slave descriptor.
 */
#define FIREAT_PHASECHARGE_CH2_COMPONENT_TYPE altera_avalon_pio
#define FIREAT_PHASECHARGE_CH2_COMPONENT_NAME fireAt_PhaseCharge_ch2
#define FIREAT_PHASECHARGE_CH2_BASE 0x180
#define FIREAT_PHASECHARGE_CH2_SPAN 16
#define FIREAT_PHASECHARGE_CH2_END 0x18f
#define FIREAT_PHASECHARGE_CH2_BIT_CLEARING_EDGE_REGISTER 0
#define FIREAT_PHASECHARGE_CH2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FIREAT_PHASECHARGE_CH2_CAPTURE 0
#define FIREAT_PHASECHARGE_CH2_DATA_WIDTH 32
#define FIREAT_PHASECHARGE_CH2_DO_TEST_BENCH_WIRING 0
#define FIREAT_PHASECHARGE_CH2_DRIVEN_SIM_VALUE 0
#define FIREAT_PHASECHARGE_CH2_EDGE_TYPE NONE
#define FIREAT_PHASECHARGE_CH2_FREQ 50000000
#define FIREAT_PHASECHARGE_CH2_HAS_IN 0
#define FIREAT_PHASECHARGE_CH2_HAS_OUT 1
#define FIREAT_PHASECHARGE_CH2_HAS_TRI 0
#define FIREAT_PHASECHARGE_CH2_IRQ_TYPE NONE
#define FIREAT_PHASECHARGE_CH2_RESET_VALUE 0

/*
 * Macros for device 'fireAt_PhaseCharge_ch3', class 'altera_avalon_pio'
 * The macros are prefixed with 'FIREAT_PHASECHARGE_CH3_'.
 * The prefix is the slave descriptor.
 */
#define FIREAT_PHASECHARGE_CH3_COMPONENT_TYPE altera_avalon_pio
#define FIREAT_PHASECHARGE_CH3_COMPONENT_NAME fireAt_PhaseCharge_ch3
#define FIREAT_PHASECHARGE_CH3_BASE 0x190
#define FIREAT_PHASECHARGE_CH3_SPAN 16
#define FIREAT_PHASECHARGE_CH3_END 0x19f
#define FIREAT_PHASECHARGE_CH3_BIT_CLEARING_EDGE_REGISTER 0
#define FIREAT_PHASECHARGE_CH3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FIREAT_PHASECHARGE_CH3_CAPTURE 0
#define FIREAT_PHASECHARGE_CH3_DATA_WIDTH 32
#define FIREAT_PHASECHARGE_CH3_DO_TEST_BENCH_WIRING 0
#define FIREAT_PHASECHARGE_CH3_DRIVEN_SIM_VALUE 0
#define FIREAT_PHASECHARGE_CH3_EDGE_TYPE NONE
#define FIREAT_PHASECHARGE_CH3_FREQ 50000000
#define FIREAT_PHASECHARGE_CH3_HAS_IN 0
#define FIREAT_PHASECHARGE_CH3_HAS_OUT 1
#define FIREAT_PHASECHARGE_CH3_HAS_TRI 0
#define FIREAT_PHASECHARGE_CH3_IRQ_TYPE NONE
#define FIREAT_PHASECHARGE_CH3_RESET_VALUE 0

/*
 * Macros for device 'fireAt_PhaseCharge_ch4', class 'altera_avalon_pio'
 * The macros are prefixed with 'FIREAT_PHASECHARGE_CH4_'.
 * The prefix is the slave descriptor.
 */
#define FIREAT_PHASECHARGE_CH4_COMPONENT_TYPE altera_avalon_pio
#define FIREAT_PHASECHARGE_CH4_COMPONENT_NAME fireAt_PhaseCharge_ch4
#define FIREAT_PHASECHARGE_CH4_BASE 0x200
#define FIREAT_PHASECHARGE_CH4_SPAN 16
#define FIREAT_PHASECHARGE_CH4_END 0x20f
#define FIREAT_PHASECHARGE_CH4_BIT_CLEARING_EDGE_REGISTER 0
#define FIREAT_PHASECHARGE_CH4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FIREAT_PHASECHARGE_CH4_CAPTURE 0
#define FIREAT_PHASECHARGE_CH4_DATA_WIDTH 32
#define FIREAT_PHASECHARGE_CH4_DO_TEST_BENCH_WIRING 0
#define FIREAT_PHASECHARGE_CH4_DRIVEN_SIM_VALUE 0
#define FIREAT_PHASECHARGE_CH4_EDGE_TYPE NONE
#define FIREAT_PHASECHARGE_CH4_FREQ 50000000
#define FIREAT_PHASECHARGE_CH4_HAS_IN 0
#define FIREAT_PHASECHARGE_CH4_HAS_OUT 1
#define FIREAT_PHASECHARGE_CH4_HAS_TRI 0
#define FIREAT_PHASECHARGE_CH4_IRQ_TYPE NONE
#define FIREAT_PHASECHARGE_CH4_RESET_VALUE 0

/*
 * Macros for device 'fireAt_PhaseCharge_ch5', class 'altera_avalon_pio'
 * The macros are prefixed with 'FIREAT_PHASECHARGE_CH5_'.
 * The prefix is the slave descriptor.
 */
#define FIREAT_PHASECHARGE_CH5_COMPONENT_TYPE altera_avalon_pio
#define FIREAT_PHASECHARGE_CH5_COMPONENT_NAME fireAt_PhaseCharge_ch5
#define FIREAT_PHASECHARGE_CH5_BASE 0x210
#define FIREAT_PHASECHARGE_CH5_SPAN 16
#define FIREAT_PHASECHARGE_CH5_END 0x21f
#define FIREAT_PHASECHARGE_CH5_BIT_CLEARING_EDGE_REGISTER 0
#define FIREAT_PHASECHARGE_CH5_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FIREAT_PHASECHARGE_CH5_CAPTURE 0
#define FIREAT_PHASECHARGE_CH5_DATA_WIDTH 32
#define FIREAT_PHASECHARGE_CH5_DO_TEST_BENCH_WIRING 0
#define FIREAT_PHASECHARGE_CH5_DRIVEN_SIM_VALUE 0
#define FIREAT_PHASECHARGE_CH5_EDGE_TYPE NONE
#define FIREAT_PHASECHARGE_CH5_FREQ 50000000
#define FIREAT_PHASECHARGE_CH5_HAS_IN 0
#define FIREAT_PHASECHARGE_CH5_HAS_OUT 1
#define FIREAT_PHASECHARGE_CH5_HAS_TRI 0
#define FIREAT_PHASECHARGE_CH5_IRQ_TYPE NONE
#define FIREAT_PHASECHARGE_CH5_RESET_VALUE 0

/*
 * Macros for device 'fireAt_PhaseCharge_ch6', class 'altera_avalon_pio'
 * The macros are prefixed with 'FIREAT_PHASECHARGE_CH6_'.
 * The prefix is the slave descriptor.
 */
#define FIREAT_PHASECHARGE_CH6_COMPONENT_TYPE altera_avalon_pio
#define FIREAT_PHASECHARGE_CH6_COMPONENT_NAME fireAt_PhaseCharge_ch6
#define FIREAT_PHASECHARGE_CH6_BASE 0x220
#define FIREAT_PHASECHARGE_CH6_SPAN 16
#define FIREAT_PHASECHARGE_CH6_END 0x22f
#define FIREAT_PHASECHARGE_CH6_BIT_CLEARING_EDGE_REGISTER 0
#define FIREAT_PHASECHARGE_CH6_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FIREAT_PHASECHARGE_CH6_CAPTURE 0
#define FIREAT_PHASECHARGE_CH6_DATA_WIDTH 32
#define FIREAT_PHASECHARGE_CH6_DO_TEST_BENCH_WIRING 0
#define FIREAT_PHASECHARGE_CH6_DRIVEN_SIM_VALUE 0
#define FIREAT_PHASECHARGE_CH6_EDGE_TYPE NONE
#define FIREAT_PHASECHARGE_CH6_FREQ 50000000
#define FIREAT_PHASECHARGE_CH6_HAS_IN 0
#define FIREAT_PHASECHARGE_CH6_HAS_OUT 1
#define FIREAT_PHASECHARGE_CH6_HAS_TRI 0
#define FIREAT_PHASECHARGE_CH6_IRQ_TYPE NONE
#define FIREAT_PHASECHARGE_CH6_RESET_VALUE 0

/*
 * Macros for device 'fireAt_PhaseCharge_ch7', class 'altera_avalon_pio'
 * The macros are prefixed with 'FIREAT_PHASECHARGE_CH7_'.
 * The prefix is the slave descriptor.
 */
#define FIREAT_PHASECHARGE_CH7_COMPONENT_TYPE altera_avalon_pio
#define FIREAT_PHASECHARGE_CH7_COMPONENT_NAME fireAt_PhaseCharge_ch7
#define FIREAT_PHASECHARGE_CH7_BASE 0x230
#define FIREAT_PHASECHARGE_CH7_SPAN 16
#define FIREAT_PHASECHARGE_CH7_END 0x23f
#define FIREAT_PHASECHARGE_CH7_BIT_CLEARING_EDGE_REGISTER 0
#define FIREAT_PHASECHARGE_CH7_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FIREAT_PHASECHARGE_CH7_CAPTURE 0
#define FIREAT_PHASECHARGE_CH7_DATA_WIDTH 32
#define FIREAT_PHASECHARGE_CH7_DO_TEST_BENCH_WIRING 0
#define FIREAT_PHASECHARGE_CH7_DRIVEN_SIM_VALUE 0
#define FIREAT_PHASECHARGE_CH7_EDGE_TYPE NONE
#define FIREAT_PHASECHARGE_CH7_FREQ 50000000
#define FIREAT_PHASECHARGE_CH7_HAS_IN 0
#define FIREAT_PHASECHARGE_CH7_HAS_OUT 1
#define FIREAT_PHASECHARGE_CH7_HAS_TRI 0
#define FIREAT_PHASECHARGE_CH7_IRQ_TYPE NONE
#define FIREAT_PHASECHARGE_CH7_RESET_VALUE 0

/*
 * Macros for device 'pio_adc_serial_command', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_ADC_SERIAL_COMMAND_'.
 * The prefix is the slave descriptor.
 */
#define PIO_ADC_SERIAL_COMMAND_COMPONENT_TYPE altera_avalon_pio
#define PIO_ADC_SERIAL_COMMAND_COMPONENT_NAME pio_adc_serial_command
#define PIO_ADC_SERIAL_COMMAND_BASE 0x240
#define PIO_ADC_SERIAL_COMMAND_SPAN 16
#define PIO_ADC_SERIAL_COMMAND_END 0x24f
#define PIO_ADC_SERIAL_COMMAND_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_ADC_SERIAL_COMMAND_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_ADC_SERIAL_COMMAND_CAPTURE 0
#define PIO_ADC_SERIAL_COMMAND_DATA_WIDTH 24
#define PIO_ADC_SERIAL_COMMAND_DO_TEST_BENCH_WIRING 0
#define PIO_ADC_SERIAL_COMMAND_DRIVEN_SIM_VALUE 0
#define PIO_ADC_SERIAL_COMMAND_EDGE_TYPE NONE
#define PIO_ADC_SERIAL_COMMAND_FREQ 50000000
#define PIO_ADC_SERIAL_COMMAND_HAS_IN 0
#define PIO_ADC_SERIAL_COMMAND_HAS_OUT 1
#define PIO_ADC_SERIAL_COMMAND_HAS_TRI 0
#define PIO_ADC_SERIAL_COMMAND_IRQ_TYPE NONE
#define PIO_ADC_SERIAL_COMMAND_RESET_VALUE 0

/*
 * Macros for device 'pio_adc_control_comms', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_ADC_CONTROL_COMMS_'.
 * The prefix is the slave descriptor.
 */
#define PIO_ADC_CONTROL_COMMS_COMPONENT_TYPE altera_avalon_pio
#define PIO_ADC_CONTROL_COMMS_COMPONENT_NAME pio_adc_control_comms
#define PIO_ADC_CONTROL_COMMS_BASE 0x250
#define PIO_ADC_CONTROL_COMMS_SPAN 16
#define PIO_ADC_CONTROL_COMMS_END 0x25f
#define PIO_ADC_CONTROL_COMMS_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_ADC_CONTROL_COMMS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_ADC_CONTROL_COMMS_CAPTURE 0
#define PIO_ADC_CONTROL_COMMS_DATA_WIDTH 8
#define PIO_ADC_CONTROL_COMMS_DO_TEST_BENCH_WIRING 0
#define PIO_ADC_CONTROL_COMMS_DRIVEN_SIM_VALUE 0
#define PIO_ADC_CONTROL_COMMS_EDGE_TYPE NONE
#define PIO_ADC_CONTROL_COMMS_FREQ 50000000
#define PIO_ADC_CONTROL_COMMS_HAS_IN 0
#define PIO_ADC_CONTROL_COMMS_HAS_OUT 1
#define PIO_ADC_CONTROL_COMMS_HAS_TRI 0
#define PIO_ADC_CONTROL_COMMS_IRQ_TYPE NONE
#define PIO_ADC_CONTROL_COMMS_RESET_VALUE 0

/*
 * Macros for device 'pio_adc_fpga_state_reset', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_ADC_FPGA_STATE_RESET_'.
 * The prefix is the slave descriptor.
 */
#define PIO_ADC_FPGA_STATE_RESET_COMPONENT_TYPE altera_avalon_pio
#define PIO_ADC_FPGA_STATE_RESET_COMPONENT_NAME pio_adc_fpga_state_reset
#define PIO_ADC_FPGA_STATE_RESET_BASE 0x260
#define PIO_ADC_FPGA_STATE_RESET_SPAN 16
#define PIO_ADC_FPGA_STATE_RESET_END 0x26f
#define PIO_ADC_FPGA_STATE_RESET_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_ADC_FPGA_STATE_RESET_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_ADC_FPGA_STATE_RESET_CAPTURE 0
#define PIO_ADC_FPGA_STATE_RESET_DATA_WIDTH 1
#define PIO_ADC_FPGA_STATE_RESET_DO_TEST_BENCH_WIRING 0
#define PIO_ADC_FPGA_STATE_RESET_DRIVEN_SIM_VALUE 0
#define PIO_ADC_FPGA_STATE_RESET_EDGE_TYPE NONE
#define PIO_ADC_FPGA_STATE_RESET_FREQ 50000000
#define PIO_ADC_FPGA_STATE_RESET_HAS_IN 0
#define PIO_ADC_FPGA_STATE_RESET_HAS_OUT 1
#define PIO_ADC_FPGA_STATE_RESET_HAS_TRI 0
#define PIO_ADC_FPGA_STATE_RESET_IRQ_TYPE NONE
#define PIO_ADC_FPGA_STATE_RESET_RESET_VALUE 0

/*
 * Macros for device 'pio_set_adc_record_length', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_SET_ADC_RECORD_LENGTH_'.
 * The prefix is the slave descriptor.
 */
#define PIO_SET_ADC_RECORD_LENGTH_COMPONENT_TYPE altera_avalon_pio
#define PIO_SET_ADC_RECORD_LENGTH_COMPONENT_NAME pio_set_adc_record_length
#define PIO_SET_ADC_RECORD_LENGTH_BASE 0x270
#define PIO_SET_ADC_RECORD_LENGTH_SPAN 16
#define PIO_SET_ADC_RECORD_LENGTH_END 0x27f
#define PIO_SET_ADC_RECORD_LENGTH_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_SET_ADC_RECORD_LENGTH_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_SET_ADC_RECORD_LENGTH_CAPTURE 0
#define PIO_SET_ADC_RECORD_LENGTH_DATA_WIDTH 13
#define PIO_SET_ADC_RECORD_LENGTH_DO_TEST_BENCH_WIRING 0
#define PIO_SET_ADC_RECORD_LENGTH_DRIVEN_SIM_VALUE 0
#define PIO_SET_ADC_RECORD_LENGTH_EDGE_TYPE NONE
#define PIO_SET_ADC_RECORD_LENGTH_FREQ 50000000
#define PIO_SET_ADC_RECORD_LENGTH_HAS_IN 0
#define PIO_SET_ADC_RECORD_LENGTH_HAS_OUT 1
#define PIO_SET_ADC_RECORD_LENGTH_HAS_TRI 0
#define PIO_SET_ADC_RECORD_LENGTH_IRQ_TYPE NONE
#define PIO_SET_ADC_RECORD_LENGTH_RESET_VALUE 0

/*
 * Macros for device 'pio_set_adc_trig_delay', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_SET_ADC_TRIG_DELAY_'.
 * The prefix is the slave descriptor.
 */
#define PIO_SET_ADC_TRIG_DELAY_COMPONENT_TYPE altera_avalon_pio
#define PIO_SET_ADC_TRIG_DELAY_COMPONENT_NAME pio_set_adc_trig_delay
#define PIO_SET_ADC_TRIG_DELAY_BASE 0x280
#define PIO_SET_ADC_TRIG_DELAY_SPAN 16
#define PIO_SET_ADC_TRIG_DELAY_END 0x28f
#define PIO_SET_ADC_TRIG_DELAY_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_SET_ADC_TRIG_DELAY_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_SET_ADC_TRIG_DELAY_CAPTURE 0
#define PIO_SET_ADC_TRIG_DELAY_DATA_WIDTH 32
#define PIO_SET_ADC_TRIG_DELAY_DO_TEST_BENCH_WIRING 0
#define PIO_SET_ADC_TRIG_DELAY_DRIVEN_SIM_VALUE 0
#define PIO_SET_ADC_TRIG_DELAY_EDGE_TYPE NONE
#define PIO_SET_ADC_TRIG_DELAY_FREQ 50000000
#define PIO_SET_ADC_TRIG_DELAY_HAS_IN 0
#define PIO_SET_ADC_TRIG_DELAY_HAS_OUT 1
#define PIO_SET_ADC_TRIG_DELAY_HAS_TRI 0
#define PIO_SET_ADC_TRIG_DELAY_IRQ_TYPE NONE
#define PIO_SET_ADC_TRIG_DELAY_RESET_VALUE 0

/*
 * Macros for device 'tx_output_error_msg', class 'altera_avalon_pio'
 * The macros are prefixed with 'TX_OUTPUT_ERROR_MSG_'.
 * The prefix is the slave descriptor.
 */
#define TX_OUTPUT_ERROR_MSG_COMPONENT_TYPE altera_avalon_pio
#define TX_OUTPUT_ERROR_MSG_COMPONENT_NAME tx_output_error_msg
#define TX_OUTPUT_ERROR_MSG_BASE 0x290
#define TX_OUTPUT_ERROR_MSG_SPAN 16
#define TX_OUTPUT_ERROR_MSG_END 0x29f
#define TX_OUTPUT_ERROR_MSG_BIT_CLEARING_EDGE_REGISTER 0
#define TX_OUTPUT_ERROR_MSG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define TX_OUTPUT_ERROR_MSG_CAPTURE 0
#define TX_OUTPUT_ERROR_MSG_DATA_WIDTH 8
#define TX_OUTPUT_ERROR_MSG_DO_TEST_BENCH_WIRING 0
#define TX_OUTPUT_ERROR_MSG_DRIVEN_SIM_VALUE 0
#define TX_OUTPUT_ERROR_MSG_EDGE_TYPE NONE
#define TX_OUTPUT_ERROR_MSG_FREQ 50000000
#define TX_OUTPUT_ERROR_MSG_HAS_IN 1
#define TX_OUTPUT_ERROR_MSG_HAS_OUT 0
#define TX_OUTPUT_ERROR_MSG_HAS_TRI 0
#define TX_OUTPUT_ERROR_MSG_IRQ_TYPE NONE
#define TX_OUTPUT_ERROR_MSG_RESET_VALUE 0

/*
 * Macros for device 'tx_interrupt_error_msg', class 'altera_avalon_pio'
 * The macros are prefixed with 'TX_INTERRUPT_ERROR_MSG_'.
 * The prefix is the slave descriptor.
 */
#define TX_INTERRUPT_ERROR_MSG_COMPONENT_TYPE altera_avalon_pio
#define TX_INTERRUPT_ERROR_MSG_COMPONENT_NAME tx_interrupt_error_msg
#define TX_INTERRUPT_ERROR_MSG_BASE 0x300
#define TX_INTERRUPT_ERROR_MSG_SPAN 16
#define TX_INTERRUPT_ERROR_MSG_END 0x30f
#define TX_INTERRUPT_ERROR_MSG_BIT_CLEARING_EDGE_REGISTER 0
#define TX_INTERRUPT_ERROR_MSG_BIT_MODIFYING_OUTPUT_REGISTER 0
#define TX_INTERRUPT_ERROR_MSG_CAPTURE 0
#define TX_INTERRUPT_ERROR_MSG_DATA_WIDTH 8
#define TX_INTERRUPT_ERROR_MSG_DO_TEST_BENCH_WIRING 0
#define TX_INTERRUPT_ERROR_MSG_DRIVEN_SIM_VALUE 0
#define TX_INTERRUPT_ERROR_MSG_EDGE_TYPE NONE
#define TX_INTERRUPT_ERROR_MSG_FREQ 50000000
#define TX_INTERRUPT_ERROR_MSG_HAS_IN 1
#define TX_INTERRUPT_ERROR_MSG_HAS_OUT 0
#define TX_INTERRUPT_ERROR_MSG_HAS_TRI 0
#define TX_INTERRUPT_ERROR_MSG_IRQ_TYPE NONE
#define TX_INTERRUPT_ERROR_MSG_RESET_VALUE 0

/*
 * Macros for device 'tx_error_comms', class 'altera_avalon_pio'
 * The macros are prefixed with 'TX_ERROR_COMMS_'.
 * The prefix is the slave descriptor.
 */
#define TX_ERROR_COMMS_COMPONENT_TYPE altera_avalon_pio
#define TX_ERROR_COMMS_COMPONENT_NAME tx_error_comms
#define TX_ERROR_COMMS_BASE 0x310
#define TX_ERROR_COMMS_SPAN 16
#define TX_ERROR_COMMS_END 0x31f
#define TX_ERROR_COMMS_BIT_CLEARING_EDGE_REGISTER 0
#define TX_ERROR_COMMS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define TX_ERROR_COMMS_CAPTURE 0
#define TX_ERROR_COMMS_DATA_WIDTH 8
#define TX_ERROR_COMMS_DO_TEST_BENCH_WIRING 0
#define TX_ERROR_COMMS_DRIVEN_SIM_VALUE 0
#define TX_ERROR_COMMS_EDGE_TYPE NONE
#define TX_ERROR_COMMS_FREQ 50000000
#define TX_ERROR_COMMS_HAS_IN 0
#define TX_ERROR_COMMS_HAS_OUT 1
#define TX_ERROR_COMMS_HAS_TRI 0
#define TX_ERROR_COMMS_IRQ_TYPE NONE
#define TX_ERROR_COMMS_RESET_VALUE 0

/*
 * Macros for device 'tx_set_instruction_read_addr', class 'altera_avalon_pio'
 * The macros are prefixed with 'TX_SET_INSTRUCTION_READ_ADDR_'.
 * The prefix is the slave descriptor.
 */
#define TX_SET_INSTRUCTION_READ_ADDR_COMPONENT_TYPE altera_avalon_pio
#define TX_SET_INSTRUCTION_READ_ADDR_COMPONENT_NAME tx_set_instruction_read_addr
#define TX_SET_INSTRUCTION_READ_ADDR_BASE 0x320
#define TX_SET_INSTRUCTION_READ_ADDR_SPAN 16
#define TX_SET_INSTRUCTION_READ_ADDR_END 0x32f
#define TX_SET_INSTRUCTION_READ_ADDR_BIT_CLEARING_EDGE_REGISTER 0
#define TX_SET_INSTRUCTION_READ_ADDR_BIT_MODIFYING_OUTPUT_REGISTER 0
#define TX_SET_INSTRUCTION_READ_ADDR_CAPTURE 0
#define TX_SET_INSTRUCTION_READ_ADDR_DATA_WIDTH 16
#define TX_SET_INSTRUCTION_READ_ADDR_DO_TEST_BENCH_WIRING 0
#define TX_SET_INSTRUCTION_READ_ADDR_DRIVEN_SIM_VALUE 0
#define TX_SET_INSTRUCTION_READ_ADDR_EDGE_TYPE NONE
#define TX_SET_INSTRUCTION_READ_ADDR_FREQ 50000000
#define TX_SET_INSTRUCTION_READ_ADDR_HAS_IN 0
#define TX_SET_INSTRUCTION_READ_ADDR_HAS_OUT 1
#define TX_SET_INSTRUCTION_READ_ADDR_HAS_TRI 0
#define TX_SET_INSTRUCTION_READ_ADDR_IRQ_TYPE NONE
#define TX_SET_INSTRUCTION_READ_ADDR_RESET_VALUE 0

/*
 * Macros for device 'adc_ramBank1', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'ADC_RAMBANK1_'.
 * The prefix is the slave descriptor.
 */
#define ADC_RAMBANK1_COMPONENT_TYPE altera_avalon_onchip_memory2
#define ADC_RAMBANK1_COMPONENT_NAME adc_ramBank1
#define ADC_RAMBANK1_BASE 0x8000
#define ADC_RAMBANK1_SPAN 32768
#define ADC_RAMBANK1_END 0xffff
#define ADC_RAMBANK1_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define ADC_RAMBANK1_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define ADC_RAMBANK1_CONTENTS_INFO ""
#define ADC_RAMBANK1_DUAL_PORT 1
#define ADC_RAMBANK1_GUI_RAM_BLOCK_TYPE AUTO
#define ADC_RAMBANK1_INIT_CONTENTS_FILE soc_system_adc_ramBank1
#define ADC_RAMBANK1_INIT_MEM_CONTENT 1
#define ADC_RAMBANK1_INSTANCE_ID NONE
#define ADC_RAMBANK1_NON_DEFAULT_INIT_FILE_ENABLED 0
#define ADC_RAMBANK1_RAM_BLOCK_TYPE AUTO
#define ADC_RAMBANK1_READ_DURING_WRITE_MODE DONT_CARE
#define ADC_RAMBANK1_SINGLE_CLOCK_OP 0
#define ADC_RAMBANK1_SIZE_MULTIPLE 1
#define ADC_RAMBANK1_SIZE_VALUE 32768
#define ADC_RAMBANK1_WRITABLE 1
#define ADC_RAMBANK1_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define ADC_RAMBANK1_MEMORY_INFO_GENERATE_DAT_SYM 1
#define ADC_RAMBANK1_MEMORY_INFO_GENERATE_HEX 1
#define ADC_RAMBANK1_MEMORY_INFO_HAS_BYTE_LANE 0
#define ADC_RAMBANK1_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define ADC_RAMBANK1_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define ADC_RAMBANK1_MEMORY_INFO_MEM_INIT_FILENAME soc_system_adc_ramBank1

/*
 * Macros for device 'adc_ramBank2', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'ADC_RAMBANK2_'.
 * The prefix is the slave descriptor.
 */
#define ADC_RAMBANK2_COMPONENT_TYPE altera_avalon_onchip_memory2
#define ADC_RAMBANK2_COMPONENT_NAME adc_ramBank2
#define ADC_RAMBANK2_BASE 0x10000
#define ADC_RAMBANK2_SPAN 32768
#define ADC_RAMBANK2_END 0x17fff
#define ADC_RAMBANK2_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define ADC_RAMBANK2_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define ADC_RAMBANK2_CONTENTS_INFO ""
#define ADC_RAMBANK2_DUAL_PORT 1
#define ADC_RAMBANK2_GUI_RAM_BLOCK_TYPE AUTO
#define ADC_RAMBANK2_INIT_CONTENTS_FILE soc_system_adc_ramBank2
#define ADC_RAMBANK2_INIT_MEM_CONTENT 1
#define ADC_RAMBANK2_INSTANCE_ID NONE
#define ADC_RAMBANK2_NON_DEFAULT_INIT_FILE_ENABLED 0
#define ADC_RAMBANK2_RAM_BLOCK_TYPE AUTO
#define ADC_RAMBANK2_READ_DURING_WRITE_MODE DONT_CARE
#define ADC_RAMBANK2_SINGLE_CLOCK_OP 0
#define ADC_RAMBANK2_SIZE_MULTIPLE 1
#define ADC_RAMBANK2_SIZE_VALUE 32768
#define ADC_RAMBANK2_WRITABLE 1
#define ADC_RAMBANK2_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define ADC_RAMBANK2_MEMORY_INFO_GENERATE_DAT_SYM 1
#define ADC_RAMBANK2_MEMORY_INFO_GENERATE_HEX 1
#define ADC_RAMBANK2_MEMORY_INFO_HAS_BYTE_LANE 0
#define ADC_RAMBANK2_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define ADC_RAMBANK2_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define ADC_RAMBANK2_MEMORY_INFO_MEM_INIT_FILENAME soc_system_adc_ramBank2

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * The macros are prefixed with 'SYSID_QSYS_'.
 * The prefix is the slave descriptor.
 */
#define SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define SYSID_QSYS_BASE 0x10000
#define SYSID_QSYS_SPAN 8
#define SYSID_QSYS_END 0x10007
#define SYSID_QSYS_ID 2899645186
#define SYSID_QSYS_TIMESTAMP 1557342457

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * The macros are prefixed with 'JTAG_UART_'.
 * The prefix is the slave descriptor.
 */
#define JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define JTAG_UART_COMPONENT_NAME jtag_uart
#define JTAG_UART_BASE 0x20000
#define JTAG_UART_SPAN 8
#define JTAG_UART_END 0x20007
#define JTAG_UART_IRQ 2
#define JTAG_UART_READ_DEPTH 64
#define JTAG_UART_READ_THRESHOLD 8
#define JTAG_UART_WRITE_DEPTH 64
#define JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'tx_loopAddressRegister', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'TX_LOOPADDRESSREGISTER_'.
 * The prefix is the slave descriptor.
 */
#define TX_LOOPADDRESSREGISTER_COMPONENT_TYPE altera_avalon_onchip_memory2
#define TX_LOOPADDRESSREGISTER_COMPONENT_NAME tx_loopAddressRegister
#define TX_LOOPADDRESSREGISTER_BASE 0x28000
#define TX_LOOPADDRESSREGISTER_SPAN 64
#define TX_LOOPADDRESSREGISTER_END 0x2803f
#define TX_LOOPADDRESSREGISTER_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define TX_LOOPADDRESSREGISTER_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define TX_LOOPADDRESSREGISTER_CONTENTS_INFO ""
#define TX_LOOPADDRESSREGISTER_DUAL_PORT 1
#define TX_LOOPADDRESSREGISTER_GUI_RAM_BLOCK_TYPE AUTO
#define TX_LOOPADDRESSREGISTER_INIT_CONTENTS_FILE soc_system_tx_loopAddressRegister
#define TX_LOOPADDRESSREGISTER_INIT_MEM_CONTENT 1
#define TX_LOOPADDRESSREGISTER_INSTANCE_ID NONE
#define TX_LOOPADDRESSREGISTER_NON_DEFAULT_INIT_FILE_ENABLED 0
#define TX_LOOPADDRESSREGISTER_RAM_BLOCK_TYPE AUTO
#define TX_LOOPADDRESSREGISTER_READ_DURING_WRITE_MODE DONT_CARE
#define TX_LOOPADDRESSREGISTER_SINGLE_CLOCK_OP 0
#define TX_LOOPADDRESSREGISTER_SIZE_MULTIPLE 1
#define TX_LOOPADDRESSREGISTER_SIZE_VALUE 64
#define TX_LOOPADDRESSREGISTER_WRITABLE 1
#define TX_LOOPADDRESSREGISTER_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define TX_LOOPADDRESSREGISTER_MEMORY_INFO_GENERATE_DAT_SYM 1
#define TX_LOOPADDRESSREGISTER_MEMORY_INFO_GENERATE_HEX 1
#define TX_LOOPADDRESSREGISTER_MEMORY_INFO_HAS_BYTE_LANE 0
#define TX_LOOPADDRESSREGISTER_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define TX_LOOPADDRESSREGISTER_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define TX_LOOPADDRESSREGISTER_MEMORY_INFO_MEM_INIT_FILENAME soc_system_tx_loopAddressRegister

/*
 * Macros for device 'tx_loopCounterRegister', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'TX_LOOPCOUNTERREGISTER_'.
 * The prefix is the slave descriptor.
 */
#define TX_LOOPCOUNTERREGISTER_COMPONENT_TYPE altera_avalon_onchip_memory2
#define TX_LOOPCOUNTERREGISTER_COMPONENT_NAME tx_loopCounterRegister
#define TX_LOOPCOUNTERREGISTER_BASE 0x28040
#define TX_LOOPCOUNTERREGISTER_SPAN 64
#define TX_LOOPCOUNTERREGISTER_END 0x2807f
#define TX_LOOPCOUNTERREGISTER_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define TX_LOOPCOUNTERREGISTER_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define TX_LOOPCOUNTERREGISTER_CONTENTS_INFO ""
#define TX_LOOPCOUNTERREGISTER_DUAL_PORT 1
#define TX_LOOPCOUNTERREGISTER_GUI_RAM_BLOCK_TYPE AUTO
#define TX_LOOPCOUNTERREGISTER_INIT_CONTENTS_FILE soc_system_tx_loopCounterRegister
#define TX_LOOPCOUNTERREGISTER_INIT_MEM_CONTENT 1
#define TX_LOOPCOUNTERREGISTER_INSTANCE_ID NONE
#define TX_LOOPCOUNTERREGISTER_NON_DEFAULT_INIT_FILE_ENABLED 0
#define TX_LOOPCOUNTERREGISTER_RAM_BLOCK_TYPE AUTO
#define TX_LOOPCOUNTERREGISTER_READ_DURING_WRITE_MODE DONT_CARE
#define TX_LOOPCOUNTERREGISTER_SINGLE_CLOCK_OP 0
#define TX_LOOPCOUNTERREGISTER_SIZE_MULTIPLE 1
#define TX_LOOPCOUNTERREGISTER_SIZE_VALUE 64
#define TX_LOOPCOUNTERREGISTER_WRITABLE 1
#define TX_LOOPCOUNTERREGISTER_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define TX_LOOPCOUNTERREGISTER_MEMORY_INFO_GENERATE_DAT_SYM 1
#define TX_LOOPCOUNTERREGISTER_MEMORY_INFO_GENERATE_HEX 1
#define TX_LOOPCOUNTERREGISTER_MEMORY_INFO_HAS_BYTE_LANE 0
#define TX_LOOPCOUNTERREGISTER_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define TX_LOOPCOUNTERREGISTER_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define TX_LOOPCOUNTERREGISTER_MEMORY_INFO_MEM_INIT_FILENAME soc_system_tx_loopCounterRegister

/*
 * Macros for device 'tx_instructionTypeRegister', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'TX_INSTRUCTIONTYPEREGISTER_'.
 * The prefix is the slave descriptor.
 */
#define TX_INSTRUCTIONTYPEREGISTER_COMPONENT_TYPE altera_avalon_onchip_memory2
#define TX_INSTRUCTIONTYPEREGISTER_COMPONENT_NAME tx_instructionTypeRegister
#define TX_INSTRUCTIONTYPEREGISTER_BASE 0x30000
#define TX_INSTRUCTIONTYPEREGISTER_SPAN 65536
#define TX_INSTRUCTIONTYPEREGISTER_END 0x3ffff
#define TX_INSTRUCTIONTYPEREGISTER_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define TX_INSTRUCTIONTYPEREGISTER_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define TX_INSTRUCTIONTYPEREGISTER_CONTENTS_INFO ""
#define TX_INSTRUCTIONTYPEREGISTER_DUAL_PORT 1
#define TX_INSTRUCTIONTYPEREGISTER_GUI_RAM_BLOCK_TYPE AUTO
#define TX_INSTRUCTIONTYPEREGISTER_INIT_CONTENTS_FILE soc_system_tx_instructionTypeRegister
#define TX_INSTRUCTIONTYPEREGISTER_INIT_MEM_CONTENT 1
#define TX_INSTRUCTIONTYPEREGISTER_INSTANCE_ID NONE
#define TX_INSTRUCTIONTYPEREGISTER_NON_DEFAULT_INIT_FILE_ENABLED 0
#define TX_INSTRUCTIONTYPEREGISTER_RAM_BLOCK_TYPE AUTO
#define TX_INSTRUCTIONTYPEREGISTER_READ_DURING_WRITE_MODE DONT_CARE
#define TX_INSTRUCTIONTYPEREGISTER_SINGLE_CLOCK_OP 0
#define TX_INSTRUCTIONTYPEREGISTER_SIZE_MULTIPLE 1
#define TX_INSTRUCTIONTYPEREGISTER_SIZE_VALUE 65536
#define TX_INSTRUCTIONTYPEREGISTER_WRITABLE 1
#define TX_INSTRUCTIONTYPEREGISTER_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define TX_INSTRUCTIONTYPEREGISTER_MEMORY_INFO_GENERATE_DAT_SYM 1
#define TX_INSTRUCTIONTYPEREGISTER_MEMORY_INFO_GENERATE_HEX 1
#define TX_INSTRUCTIONTYPEREGISTER_MEMORY_INFO_HAS_BYTE_LANE 0
#define TX_INSTRUCTIONTYPEREGISTER_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define TX_INSTRUCTIONTYPEREGISTER_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16
#define TX_INSTRUCTIONTYPEREGISTER_MEMORY_INFO_MEM_INIT_FILENAME soc_system_tx_instructionTypeRegister

/*
 * Macros for device 'tx_instructionRegister', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'TX_INSTRUCTIONREGISTER_'.
 * The prefix is the slave descriptor.
 */
#define TX_INSTRUCTIONREGISTER_COMPONENT_TYPE altera_avalon_onchip_memory2
#define TX_INSTRUCTIONREGISTER_COMPONENT_NAME tx_instructionRegister
#define TX_INSTRUCTIONREGISTER_BASE 0x40000
#define TX_INSTRUCTIONREGISTER_SPAN 131072
#define TX_INSTRUCTIONREGISTER_END 0x5ffff
#define TX_INSTRUCTIONREGISTER_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define TX_INSTRUCTIONREGISTER_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define TX_INSTRUCTIONREGISTER_CONTENTS_INFO ""
#define TX_INSTRUCTIONREGISTER_DUAL_PORT 1
#define TX_INSTRUCTIONREGISTER_GUI_RAM_BLOCK_TYPE AUTO
#define TX_INSTRUCTIONREGISTER_INIT_CONTENTS_FILE soc_system_tx_instructionRegister
#define TX_INSTRUCTIONREGISTER_INIT_MEM_CONTENT 1
#define TX_INSTRUCTIONREGISTER_INSTANCE_ID NONE
#define TX_INSTRUCTIONREGISTER_NON_DEFAULT_INIT_FILE_ENABLED 0
#define TX_INSTRUCTIONREGISTER_RAM_BLOCK_TYPE AUTO
#define TX_INSTRUCTIONREGISTER_READ_DURING_WRITE_MODE DONT_CARE
#define TX_INSTRUCTIONREGISTER_SINGLE_CLOCK_OP 0
#define TX_INSTRUCTIONREGISTER_SIZE_MULTIPLE 1
#define TX_INSTRUCTIONREGISTER_SIZE_VALUE 131072
#define TX_INSTRUCTIONREGISTER_WRITABLE 1
#define TX_INSTRUCTIONREGISTER_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define TX_INSTRUCTIONREGISTER_MEMORY_INFO_GENERATE_DAT_SYM 1
#define TX_INSTRUCTIONREGISTER_MEMORY_INFO_GENERATE_HEX 1
#define TX_INSTRUCTIONREGISTER_MEMORY_INFO_HAS_BYTE_LANE 0
#define TX_INSTRUCTIONREGISTER_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define TX_INSTRUCTIONREGISTER_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define TX_INSTRUCTIONREGISTER_MEMORY_INFO_MEM_INIT_FILENAME soc_system_tx_instructionRegister

/*
 * Macros for device 'tx_timingRegister', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'TX_TIMINGREGISTER_'.
 * The prefix is the slave descriptor.
 */
#define TX_TIMINGREGISTER_COMPONENT_TYPE altera_avalon_onchip_memory2
#define TX_TIMINGREGISTER_COMPONENT_NAME tx_timingRegister
#define TX_TIMINGREGISTER_BASE 0x60000
#define TX_TIMINGREGISTER_SPAN 131072
#define TX_TIMINGREGISTER_END 0x7ffff
#define TX_TIMINGREGISTER_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define TX_TIMINGREGISTER_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define TX_TIMINGREGISTER_CONTENTS_INFO ""
#define TX_TIMINGREGISTER_DUAL_PORT 1
#define TX_TIMINGREGISTER_GUI_RAM_BLOCK_TYPE AUTO
#define TX_TIMINGREGISTER_INIT_CONTENTS_FILE soc_system_tx_timingRegister
#define TX_TIMINGREGISTER_INIT_MEM_CONTENT 1
#define TX_TIMINGREGISTER_INSTANCE_ID NONE
#define TX_TIMINGREGISTER_NON_DEFAULT_INIT_FILE_ENABLED 0
#define TX_TIMINGREGISTER_RAM_BLOCK_TYPE AUTO
#define TX_TIMINGREGISTER_READ_DURING_WRITE_MODE DONT_CARE
#define TX_TIMINGREGISTER_SINGLE_CLOCK_OP 0
#define TX_TIMINGREGISTER_SIZE_MULTIPLE 1
#define TX_TIMINGREGISTER_SIZE_VALUE 131072
#define TX_TIMINGREGISTER_WRITABLE 1
#define TX_TIMINGREGISTER_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define TX_TIMINGREGISTER_MEMORY_INFO_GENERATE_DAT_SYM 1
#define TX_TIMINGREGISTER_MEMORY_INFO_GENERATE_HEX 1
#define TX_TIMINGREGISTER_MEMORY_INFO_HAS_BYTE_LANE 0
#define TX_TIMINGREGISTER_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define TX_TIMINGREGISTER_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define TX_TIMINGREGISTER_MEMORY_INFO_MEM_INIT_FILENAME soc_system_tx_timingRegister


#endif /* _ALTERA_HPS_0_FANCY_H_ */
